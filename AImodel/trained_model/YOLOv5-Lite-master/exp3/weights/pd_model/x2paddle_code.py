import paddle
import math
from x2paddle.op_mapper.onnx2paddle import onnx_custom_layer as x2paddle_nn

class ONNXModel(paddle.nn.Layer):
    def __init__(self):
        super(ONNXModel, self).__init__()
        self.x2paddle__model_2_model_2_0_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_0_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_0_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_0_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_0_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_0_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_0_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_0_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_0_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_0_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_0_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_0_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_1_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_1_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_1_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_1_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_1_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_1_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_1_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_1_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_1_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_1_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_1_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_1_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_2_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_2_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_2_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_2_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_2_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_2_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_2_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_2_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_2_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_2_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_2_model_2_2_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_2_model_2_2_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_0_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_0_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_0_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_0_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_0_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_0_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_0_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_0_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_0_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_0_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_0_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_0_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_1_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_1_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_1_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_1_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_1_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_1_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_1_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_1_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_1_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_1_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_1_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_1_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_2_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_2_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_2_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_2_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_2_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_2_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_2_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_2_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_2_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_2_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_2_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_2_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_3_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_3_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_3_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_3_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_3_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_3_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_3_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_3_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_3_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_3_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_3_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_3_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_4_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_4_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_4_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_4_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_4_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_4_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_4_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_4_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_4_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_4_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_4_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_4_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_5_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_5_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_5_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_5_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_5_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_5_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_5_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_5_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_5_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_5_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_5_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_5_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_6_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_6_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_6_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_6_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_6_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_6_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_6_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_6_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_6_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_6_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_4_model_4_6_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_4_model_4_6_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_0_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_0_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_0_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_0_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_0_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_0_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_0_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_0_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_0_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_0_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_0_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_0_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_1_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_1_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_1_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_1_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_1_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_1_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_1_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_1_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_1_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_1_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_1_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_1_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_2_Constant_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_2_Constant_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_2_Constant_1_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_2_Constant_1_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_2_Constant_2_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_2_Constant_2_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_2_Constant_3_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_2_Constant_3_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_2_Constant_4_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_2_Constant_4_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_6_model_6_2_Constant_5_output_0 = self.create_parameter(shape=[1], attr='x2paddle__model_6_model_6_2_Constant_5_output_0', dtype='int64', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.conv0 = paddle.nn.Conv2D(in_channels=3, out_channels=32, kernel_size=[3, 3], stride=2, padding=1)
        self.relu0 = paddle.nn.ReLU()
        self.pool0 = paddle.nn.MaxPool2D(kernel_size=[3, 3], stride=2, padding=1)
        self.conv1 = paddle.nn.Conv2D(in_channels=32, out_channels=32, kernel_size=[3, 3], stride=2, padding=1, groups=32)
        self.conv2 = paddle.nn.Conv2D(in_channels=32, out_channels=60, kernel_size=[1, 1])
        self.conv3 = paddle.nn.Conv2D(in_channels=32, out_channels=60, kernel_size=[1, 1])
        self.relu1 = paddle.nn.ReLU()
        self.relu2 = paddle.nn.ReLU()
        self.conv4 = paddle.nn.Conv2D(in_channels=60, out_channels=60, kernel_size=[3, 3], stride=2, padding=1, groups=60)
        self.conv5 = paddle.nn.Conv2D(in_channels=60, out_channels=60, kernel_size=[1, 1])
        self.relu3 = paddle.nn.ReLU()
        self.conv6 = paddle.nn.Conv2D(in_channels=60, out_channels=60, kernel_size=[1, 1])
        self.relu4 = paddle.nn.ReLU()
        self.conv7 = paddle.nn.Conv2D(in_channels=60, out_channels=60, kernel_size=[3, 3], padding=1, groups=60)
        self.conv8 = paddle.nn.Conv2D(in_channels=60, out_channels=60, kernel_size=[1, 1])
        self.relu5 = paddle.nn.ReLU()
        self.conv9 = paddle.nn.Conv2D(in_channels=60, out_channels=60, kernel_size=[1, 1])
        self.relu6 = paddle.nn.ReLU()
        self.conv10 = paddle.nn.Conv2D(in_channels=60, out_channels=60, kernel_size=[3, 3], padding=1, groups=60)
        self.conv11 = paddle.nn.Conv2D(in_channels=60, out_channels=60, kernel_size=[1, 1])
        self.relu7 = paddle.nn.ReLU()
        self.conv12 = paddle.nn.Conv2D(in_channels=60, out_channels=60, kernel_size=[1, 1])
        self.relu8 = paddle.nn.ReLU()
        self.conv13 = paddle.nn.Conv2D(in_channels=60, out_channels=60, kernel_size=[3, 3], padding=1, groups=60)
        self.conv14 = paddle.nn.Conv2D(in_channels=60, out_channels=60, kernel_size=[1, 1])
        self.relu9 = paddle.nn.ReLU()
        self.conv15 = paddle.nn.Conv2D(in_channels=120, out_channels=120, kernel_size=[3, 3], stride=2, padding=1, groups=120)
        self.conv16 = paddle.nn.Conv2D(in_channels=120, out_channels=116, kernel_size=[1, 1])
        self.conv17 = paddle.nn.Conv2D(in_channels=120, out_channels=116, kernel_size=[1, 1])
        self.relu10 = paddle.nn.ReLU()
        self.relu11 = paddle.nn.ReLU()
        self.conv18 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[3, 3], stride=2, padding=1, groups=116)
        self.conv19 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu12 = paddle.nn.ReLU()
        self.conv20 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu13 = paddle.nn.ReLU()
        self.conv21 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[3, 3], padding=1, groups=116)
        self.conv22 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu14 = paddle.nn.ReLU()
        self.conv23 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu15 = paddle.nn.ReLU()
        self.conv24 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[3, 3], padding=1, groups=116)
        self.conv25 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu16 = paddle.nn.ReLU()
        self.conv26 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu17 = paddle.nn.ReLU()
        self.conv27 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[3, 3], padding=1, groups=116)
        self.conv28 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu18 = paddle.nn.ReLU()
        self.conv29 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu19 = paddle.nn.ReLU()
        self.conv30 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[3, 3], padding=1, groups=116)
        self.conv31 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu20 = paddle.nn.ReLU()
        self.conv32 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu21 = paddle.nn.ReLU()
        self.conv33 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[3, 3], padding=1, groups=116)
        self.conv34 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu22 = paddle.nn.ReLU()
        self.conv35 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu23 = paddle.nn.ReLU()
        self.conv36 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[3, 3], padding=1, groups=116)
        self.conv37 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu24 = paddle.nn.ReLU()
        self.conv38 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu25 = paddle.nn.ReLU()
        self.conv39 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[3, 3], padding=1, groups=116)
        self.conv40 = paddle.nn.Conv2D(in_channels=116, out_channels=116, kernel_size=[1, 1])
        self.relu26 = paddle.nn.ReLU()
        self.conv41 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[3, 3], stride=2, padding=1, groups=232)
        self.conv42 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[1, 1])
        self.conv43 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[1, 1])
        self.relu27 = paddle.nn.ReLU()
        self.relu28 = paddle.nn.ReLU()
        self.conv44 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[3, 3], stride=2, padding=1, groups=232)
        self.conv45 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[1, 1])
        self.relu29 = paddle.nn.ReLU()
        self.conv46 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[1, 1])
        self.relu30 = paddle.nn.ReLU()
        self.conv47 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[3, 3], padding=1, groups=232)
        self.conv48 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[1, 1])
        self.relu31 = paddle.nn.ReLU()
        self.conv49 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[1, 1])
        self.relu32 = paddle.nn.ReLU()
        self.conv50 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[3, 3], padding=1, groups=232)
        self.conv51 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[1, 1])
        self.relu33 = paddle.nn.ReLU()
        self.conv52 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[1, 1])
        self.relu34 = paddle.nn.ReLU()
        self.conv53 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[3, 3], padding=1, groups=232)
        self.conv54 = paddle.nn.Conv2D(in_channels=232, out_channels=232, kernel_size=[1, 1])
        self.relu35 = paddle.nn.ReLU()
        self.conv55 = paddle.nn.Conv2D(in_channels=464, out_channels=128, kernel_size=[1, 1])
        self.sigmoid0 = paddle.nn.Sigmoid()
        self.conv56 = paddle.nn.Conv2D(in_channels=360, out_channels=64, kernel_size=[1, 1])
        self.conv57 = paddle.nn.Conv2D(in_channels=360, out_channels=64, kernel_size=[1, 1])
        self.sigmoid1 = paddle.nn.Sigmoid()
        self.sigmoid2 = paddle.nn.Sigmoid()
        self.conv58 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[1, 1])
        self.sigmoid3 = paddle.nn.Sigmoid()
        self.conv59 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1)
        self.sigmoid4 = paddle.nn.Sigmoid()
        self.conv60 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[1, 1])
        self.sigmoid5 = paddle.nn.Sigmoid()
        self.conv61 = paddle.nn.Conv2D(in_channels=128, out_channels=64, kernel_size=[1, 1])
        self.sigmoid6 = paddle.nn.Sigmoid()
        self.conv62 = paddle.nn.Conv2D(in_channels=184, out_channels=32, kernel_size=[1, 1])
        self.conv63 = paddle.nn.Conv2D(in_channels=184, out_channels=32, kernel_size=[1, 1])
        self.sigmoid7 = paddle.nn.Sigmoid()
        self.sigmoid8 = paddle.nn.Sigmoid()
        self.conv64 = paddle.nn.Conv2D(in_channels=32, out_channels=32, kernel_size=[1, 1])
        self.sigmoid9 = paddle.nn.Sigmoid()
        self.conv65 = paddle.nn.Conv2D(in_channels=32, out_channels=32, kernel_size=[3, 3], padding=1)
        self.sigmoid10 = paddle.nn.Sigmoid()
        self.conv66 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[1, 1])
        self.sigmoid11 = paddle.nn.Sigmoid()
        self.conv67 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=2, padding=1)
        self.conv68 = paddle.nn.Conv2D(in_channels=64, out_channels=27, kernel_size=[1, 1])
        self.sigmoid12 = paddle.nn.Sigmoid()
        self.sigmoid13 = paddle.nn.Sigmoid()
        self.conv69 = paddle.nn.Conv2D(in_channels=128, out_channels=64, kernel_size=[1, 1])
        self.conv70 = paddle.nn.Conv2D(in_channels=128, out_channels=64, kernel_size=[1, 1])
        self.sigmoid14 = paddle.nn.Sigmoid()
        self.sigmoid15 = paddle.nn.Sigmoid()
        self.conv71 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[1, 1])
        self.sigmoid16 = paddle.nn.Sigmoid()
        self.conv72 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1)
        self.sigmoid17 = paddle.nn.Sigmoid()
        self.conv73 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[1, 1])
        self.sigmoid18 = paddle.nn.Sigmoid()
        self.conv74 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=2, padding=1)
        self.conv75 = paddle.nn.Conv2D(in_channels=128, out_channels=27, kernel_size=[1, 1])
        self.sigmoid19 = paddle.nn.Sigmoid()
        self.sigmoid20 = paddle.nn.Sigmoid()
        self.conv76 = paddle.nn.Conv2D(in_channels=256, out_channels=128, kernel_size=[1, 1])
        self.conv77 = paddle.nn.Conv2D(in_channels=256, out_channels=128, kernel_size=[1, 1])
        self.sigmoid21 = paddle.nn.Sigmoid()
        self.sigmoid22 = paddle.nn.Sigmoid()
        self.conv78 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[1, 1])
        self.sigmoid23 = paddle.nn.Sigmoid()
        self.conv79 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[3, 3], padding=1)
        self.sigmoid24 = paddle.nn.Sigmoid()
        self.conv80 = paddle.nn.Conv2D(in_channels=256, out_channels=256, kernel_size=[1, 1])
        self.sigmoid25 = paddle.nn.Sigmoid()
        self.conv81 = paddle.nn.Conv2D(in_channels=256, out_channels=27, kernel_size=[1, 1])
        self.sigmoid26 = paddle.nn.Sigmoid()

    def forward(self, x2paddle_images):
        x2paddle__model_2_model_2_0_Constant_output_0 = self.x2paddle__model_2_model_2_0_Constant_output_0
        x2paddle__model_2_model_2_0_Constant_1_output_0 = self.x2paddle__model_2_model_2_0_Constant_1_output_0
        x2paddle__model_2_model_2_0_Constant_2_output_0 = self.x2paddle__model_2_model_2_0_Constant_2_output_0
        x2paddle__model_2_model_2_0_Constant_3_output_0 = self.x2paddle__model_2_model_2_0_Constant_3_output_0
        x2paddle__model_2_model_2_0_Constant_4_output_0 = self.x2paddle__model_2_model_2_0_Constant_4_output_0
        x2paddle__model_2_model_2_0_Constant_5_output_0 = self.x2paddle__model_2_model_2_0_Constant_5_output_0
        x2paddle__model_2_model_2_1_Constant_output_0 = self.x2paddle__model_2_model_2_1_Constant_output_0
        x2paddle__model_2_model_2_1_Constant_1_output_0 = self.x2paddle__model_2_model_2_1_Constant_1_output_0
        x2paddle__model_2_model_2_1_Constant_2_output_0 = self.x2paddle__model_2_model_2_1_Constant_2_output_0
        x2paddle__model_2_model_2_1_Constant_3_output_0 = self.x2paddle__model_2_model_2_1_Constant_3_output_0
        x2paddle__model_2_model_2_1_Constant_4_output_0 = self.x2paddle__model_2_model_2_1_Constant_4_output_0
        x2paddle__model_2_model_2_1_Constant_5_output_0 = self.x2paddle__model_2_model_2_1_Constant_5_output_0
        x2paddle__model_2_model_2_2_Constant_output_0 = self.x2paddle__model_2_model_2_2_Constant_output_0
        x2paddle__model_2_model_2_2_Constant_1_output_0 = self.x2paddle__model_2_model_2_2_Constant_1_output_0
        x2paddle__model_2_model_2_2_Constant_2_output_0 = self.x2paddle__model_2_model_2_2_Constant_2_output_0
        x2paddle__model_2_model_2_2_Constant_3_output_0 = self.x2paddle__model_2_model_2_2_Constant_3_output_0
        x2paddle__model_2_model_2_2_Constant_4_output_0 = self.x2paddle__model_2_model_2_2_Constant_4_output_0
        x2paddle__model_2_model_2_2_Constant_5_output_0 = self.x2paddle__model_2_model_2_2_Constant_5_output_0
        x2paddle__model_4_model_4_0_Constant_output_0 = self.x2paddle__model_4_model_4_0_Constant_output_0
        x2paddle__model_4_model_4_0_Constant_1_output_0 = self.x2paddle__model_4_model_4_0_Constant_1_output_0
        x2paddle__model_4_model_4_0_Constant_2_output_0 = self.x2paddle__model_4_model_4_0_Constant_2_output_0
        x2paddle__model_4_model_4_0_Constant_3_output_0 = self.x2paddle__model_4_model_4_0_Constant_3_output_0
        x2paddle__model_4_model_4_0_Constant_4_output_0 = self.x2paddle__model_4_model_4_0_Constant_4_output_0
        x2paddle__model_4_model_4_0_Constant_5_output_0 = self.x2paddle__model_4_model_4_0_Constant_5_output_0
        x2paddle__model_4_model_4_1_Constant_output_0 = self.x2paddle__model_4_model_4_1_Constant_output_0
        x2paddle__model_4_model_4_1_Constant_1_output_0 = self.x2paddle__model_4_model_4_1_Constant_1_output_0
        x2paddle__model_4_model_4_1_Constant_2_output_0 = self.x2paddle__model_4_model_4_1_Constant_2_output_0
        x2paddle__model_4_model_4_1_Constant_3_output_0 = self.x2paddle__model_4_model_4_1_Constant_3_output_0
        x2paddle__model_4_model_4_1_Constant_4_output_0 = self.x2paddle__model_4_model_4_1_Constant_4_output_0
        x2paddle__model_4_model_4_1_Constant_5_output_0 = self.x2paddle__model_4_model_4_1_Constant_5_output_0
        x2paddle__model_4_model_4_2_Constant_output_0 = self.x2paddle__model_4_model_4_2_Constant_output_0
        x2paddle__model_4_model_4_2_Constant_1_output_0 = self.x2paddle__model_4_model_4_2_Constant_1_output_0
        x2paddle__model_4_model_4_2_Constant_2_output_0 = self.x2paddle__model_4_model_4_2_Constant_2_output_0
        x2paddle__model_4_model_4_2_Constant_3_output_0 = self.x2paddle__model_4_model_4_2_Constant_3_output_0
        x2paddle__model_4_model_4_2_Constant_4_output_0 = self.x2paddle__model_4_model_4_2_Constant_4_output_0
        x2paddle__model_4_model_4_2_Constant_5_output_0 = self.x2paddle__model_4_model_4_2_Constant_5_output_0
        x2paddle__model_4_model_4_3_Constant_output_0 = self.x2paddle__model_4_model_4_3_Constant_output_0
        x2paddle__model_4_model_4_3_Constant_1_output_0 = self.x2paddle__model_4_model_4_3_Constant_1_output_0
        x2paddle__model_4_model_4_3_Constant_2_output_0 = self.x2paddle__model_4_model_4_3_Constant_2_output_0
        x2paddle__model_4_model_4_3_Constant_3_output_0 = self.x2paddle__model_4_model_4_3_Constant_3_output_0
        x2paddle__model_4_model_4_3_Constant_4_output_0 = self.x2paddle__model_4_model_4_3_Constant_4_output_0
        x2paddle__model_4_model_4_3_Constant_5_output_0 = self.x2paddle__model_4_model_4_3_Constant_5_output_0
        x2paddle__model_4_model_4_4_Constant_output_0 = self.x2paddle__model_4_model_4_4_Constant_output_0
        x2paddle__model_4_model_4_4_Constant_1_output_0 = self.x2paddle__model_4_model_4_4_Constant_1_output_0
        x2paddle__model_4_model_4_4_Constant_2_output_0 = self.x2paddle__model_4_model_4_4_Constant_2_output_0
        x2paddle__model_4_model_4_4_Constant_3_output_0 = self.x2paddle__model_4_model_4_4_Constant_3_output_0
        x2paddle__model_4_model_4_4_Constant_4_output_0 = self.x2paddle__model_4_model_4_4_Constant_4_output_0
        x2paddle__model_4_model_4_4_Constant_5_output_0 = self.x2paddle__model_4_model_4_4_Constant_5_output_0
        x2paddle__model_4_model_4_5_Constant_output_0 = self.x2paddle__model_4_model_4_5_Constant_output_0
        x2paddle__model_4_model_4_5_Constant_1_output_0 = self.x2paddle__model_4_model_4_5_Constant_1_output_0
        x2paddle__model_4_model_4_5_Constant_2_output_0 = self.x2paddle__model_4_model_4_5_Constant_2_output_0
        x2paddle__model_4_model_4_5_Constant_3_output_0 = self.x2paddle__model_4_model_4_5_Constant_3_output_0
        x2paddle__model_4_model_4_5_Constant_4_output_0 = self.x2paddle__model_4_model_4_5_Constant_4_output_0
        x2paddle__model_4_model_4_5_Constant_5_output_0 = self.x2paddle__model_4_model_4_5_Constant_5_output_0
        x2paddle__model_4_model_4_6_Constant_output_0 = self.x2paddle__model_4_model_4_6_Constant_output_0
        x2paddle__model_4_model_4_6_Constant_1_output_0 = self.x2paddle__model_4_model_4_6_Constant_1_output_0
        x2paddle__model_4_model_4_6_Constant_2_output_0 = self.x2paddle__model_4_model_4_6_Constant_2_output_0
        x2paddle__model_4_model_4_6_Constant_3_output_0 = self.x2paddle__model_4_model_4_6_Constant_3_output_0
        x2paddle__model_4_model_4_6_Constant_4_output_0 = self.x2paddle__model_4_model_4_6_Constant_4_output_0
        x2paddle__model_4_model_4_6_Constant_5_output_0 = self.x2paddle__model_4_model_4_6_Constant_5_output_0
        x2paddle__model_6_model_6_0_Constant_output_0 = self.x2paddle__model_6_model_6_0_Constant_output_0
        x2paddle__model_6_model_6_0_Constant_1_output_0 = self.x2paddle__model_6_model_6_0_Constant_1_output_0
        x2paddle__model_6_model_6_0_Constant_2_output_0 = self.x2paddle__model_6_model_6_0_Constant_2_output_0
        x2paddle__model_6_model_6_0_Constant_3_output_0 = self.x2paddle__model_6_model_6_0_Constant_3_output_0
        x2paddle__model_6_model_6_0_Constant_4_output_0 = self.x2paddle__model_6_model_6_0_Constant_4_output_0
        x2paddle__model_6_model_6_0_Constant_5_output_0 = self.x2paddle__model_6_model_6_0_Constant_5_output_0
        x2paddle__model_6_model_6_1_Constant_output_0 = self.x2paddle__model_6_model_6_1_Constant_output_0
        x2paddle__model_6_model_6_1_Constant_1_output_0 = self.x2paddle__model_6_model_6_1_Constant_1_output_0
        x2paddle__model_6_model_6_1_Constant_2_output_0 = self.x2paddle__model_6_model_6_1_Constant_2_output_0
        x2paddle__model_6_model_6_1_Constant_3_output_0 = self.x2paddle__model_6_model_6_1_Constant_3_output_0
        x2paddle__model_6_model_6_1_Constant_4_output_0 = self.x2paddle__model_6_model_6_1_Constant_4_output_0
        x2paddle__model_6_model_6_1_Constant_5_output_0 = self.x2paddle__model_6_model_6_1_Constant_5_output_0
        x2paddle__model_6_model_6_2_Constant_output_0 = self.x2paddle__model_6_model_6_2_Constant_output_0
        x2paddle__model_6_model_6_2_Constant_1_output_0 = self.x2paddle__model_6_model_6_2_Constant_1_output_0
        x2paddle__model_6_model_6_2_Constant_2_output_0 = self.x2paddle__model_6_model_6_2_Constant_2_output_0
        x2paddle__model_6_model_6_2_Constant_3_output_0 = self.x2paddle__model_6_model_6_2_Constant_3_output_0
        x2paddle__model_6_model_6_2_Constant_4_output_0 = self.x2paddle__model_6_model_6_2_Constant_4_output_0
        x2paddle__model_6_model_6_2_Constant_5_output_0 = self.x2paddle__model_6_model_6_2_Constant_5_output_0
        x2paddle__model_0_conv_conv_0_Conv_output_0 = self.conv0(x2paddle_images)
        x2paddle__model_0_conv_conv_2_Relu_output_0 = self.relu0(x2paddle__model_0_conv_conv_0_Conv_output_0)
        x2paddle__model_0_maxpool_MaxPool_output_0 = self.pool0(x2paddle__model_0_conv_conv_2_Relu_output_0)
        x2paddle__model_1_branch1_branch1_0_Conv_output_0 = self.conv1(x2paddle__model_0_maxpool_MaxPool_output_0)
        x2paddle__model_1_branch2_branch2_0_Conv_output_0 = self.conv2(x2paddle__model_0_maxpool_MaxPool_output_0)
        x2paddle__model_1_branch1_branch1_1_Conv_output_0 = self.conv3(x2paddle__model_1_branch1_branch1_0_Conv_output_0)
        x2paddle__model_1_branch2_branch2_1_Relu_output_0 = self.relu1(x2paddle__model_1_branch2_branch2_0_Conv_output_0)
        x2paddle__model_1_branch1_branch1_2_Relu_output_0 = self.relu2(x2paddle__model_1_branch1_branch1_1_Conv_output_0)
        x2paddle__model_1_branch2_branch2_2_Conv_output_0 = self.conv4(x2paddle__model_1_branch2_branch2_1_Relu_output_0)
        x2paddle__model_1_branch2_branch2_3_Conv_output_0 = self.conv5(x2paddle__model_1_branch2_branch2_2_Conv_output_0)
        x2paddle__model_1_branch2_branch2_4_Relu_output_0 = self.relu3(x2paddle__model_1_branch2_branch2_3_Conv_output_0)
        x2paddle__model_1_Concat_output_0 = paddle.concat(x=[x2paddle__model_1_branch1_branch1_2_Relu_output_0, x2paddle__model_1_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_1_Reshape_output_0 = paddle.reshape(x=x2paddle__model_1_Concat_output_0, shape=[1, 2, 60, 80, 60])
        x2paddle__model_1_Transpose_output_0 = paddle.transpose(x=x2paddle__model_1_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_1_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_1_Transpose_output_0, shape=[1, -1, 80, 60])
        x2paddle__model_2_model_2_0_Shape_output_0 = paddle.shape(input=x2paddle__model_1_Reshape_1_output_0)
        x2paddle__model_2_model_2_0_Shape_output_0 = paddle.cast(x=x2paddle__model_2_model_2_0_Shape_output_0, dtype='int64')
        x2paddle__model_2_model_2_0_Gather_output_0 = paddle.gather(x=x2paddle__model_2_model_2_0_Shape_output_0, index=x2paddle__model_2_model_2_0_Constant_output_0, axis=0)
        x2paddle__model_2_model_2_0_Add_output_0 = paddle.add(x=x2paddle__model_2_model_2_0_Gather_output_0, y=x2paddle__model_2_model_2_0_Constant_2_output_0)
        x2paddle__model_2_model_2_0_Div_output_0 = paddle.divide(x=x2paddle__model_2_model_2_0_Add_output_0, y=x2paddle__model_2_model_2_0_Constant_3_output_0)
        x2paddle__model_2_model_2_0_Mul_output_0 = paddle.multiply(x=x2paddle__model_2_model_2_0_Div_output_0, y=x2paddle__model_2_model_2_0_Constant_4_output_0)
        x2paddle__model_2_model_2_0_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_2_model_2_0_Div_output_0, y=x2paddle__model_2_model_2_0_Constant_5_output_0)
        x2paddle__model_2_model_2_0_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_0_Constant_1_output_0, dtype='int32')
        x2paddle__model_2_model_2_0_Mul_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_0_Mul_output_0, dtype='int32')
        x2paddle__model_2_model_2_0_Slice_output_0 = paddle.slice(input=x2paddle__model_1_Reshape_1_output_0, axes=[1], starts=x2paddle__model_2_model_2_0_Constant_1_output_0_cast, ends=x2paddle__model_2_model_2_0_Mul_output_0_cast)
        x2paddle__model_2_model_2_0_Mul_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_0_Mul_output_0, dtype='int32')
        x2paddle__model_2_model_2_0_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_0_Mul_1_output_0, dtype='int32')
        x2paddle__model_2_model_2_0_Slice_1_output_0 = paddle.slice(input=x2paddle__model_1_Reshape_1_output_0, axes=[1], starts=x2paddle__model_2_model_2_0_Mul_output_0_cast, ends=x2paddle__model_2_model_2_0_Mul_1_output_0_cast)
        x2paddle__model_2_model_2_0_branch2_branch2_0_Conv_output_0 = self.conv6(x2paddle__model_2_model_2_0_Slice_1_output_0)
        x2paddle__model_2_model_2_0_branch2_branch2_1_Relu_output_0 = self.relu4(x2paddle__model_2_model_2_0_branch2_branch2_0_Conv_output_0)
        x2paddle__model_2_model_2_0_branch2_branch2_2_Conv_output_0 = self.conv7(x2paddle__model_2_model_2_0_branch2_branch2_1_Relu_output_0)
        x2paddle__model_2_model_2_0_branch2_branch2_3_Conv_output_0 = self.conv8(x2paddle__model_2_model_2_0_branch2_branch2_2_Conv_output_0)
        x2paddle__model_2_model_2_0_branch2_branch2_4_Relu_output_0 = self.relu5(x2paddle__model_2_model_2_0_branch2_branch2_3_Conv_output_0)
        x2paddle__model_2_model_2_0_Concat_output_0 = paddle.concat(x=[x2paddle__model_2_model_2_0_Slice_output_0, x2paddle__model_2_model_2_0_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_2_model_2_0_Reshape_output_0 = paddle.reshape(x=x2paddle__model_2_model_2_0_Concat_output_0, shape=[1, 2, 60, 80, 60])
        x2paddle__model_2_model_2_0_Transpose_output_0 = paddle.transpose(x=x2paddle__model_2_model_2_0_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_2_model_2_0_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_2_model_2_0_Transpose_output_0, shape=[1, -1, 80, 60])
        x2paddle__model_2_model_2_1_Shape_output_0 = paddle.shape(input=x2paddle__model_2_model_2_0_Reshape_1_output_0)
        x2paddle__model_2_model_2_1_Shape_output_0 = paddle.cast(x=x2paddle__model_2_model_2_1_Shape_output_0, dtype='int64')
        x2paddle__model_2_model_2_1_Gather_output_0 = paddle.gather(x=x2paddle__model_2_model_2_1_Shape_output_0, index=x2paddle__model_2_model_2_1_Constant_output_0, axis=0)
        x2paddle__model_2_model_2_1_Add_output_0 = paddle.add(x=x2paddle__model_2_model_2_1_Gather_output_0, y=x2paddle__model_2_model_2_1_Constant_2_output_0)
        x2paddle__model_2_model_2_1_Div_output_0 = paddle.divide(x=x2paddle__model_2_model_2_1_Add_output_0, y=x2paddle__model_2_model_2_1_Constant_3_output_0)
        x2paddle__model_2_model_2_1_Mul_output_0 = paddle.multiply(x=x2paddle__model_2_model_2_1_Div_output_0, y=x2paddle__model_2_model_2_1_Constant_4_output_0)
        x2paddle__model_2_model_2_1_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_2_model_2_1_Div_output_0, y=x2paddle__model_2_model_2_1_Constant_5_output_0)
        x2paddle__model_2_model_2_1_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_1_Constant_1_output_0, dtype='int32')
        x2paddle__model_2_model_2_1_Mul_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_1_Mul_output_0, dtype='int32')
        x2paddle__model_2_model_2_1_Slice_output_0 = paddle.slice(input=x2paddle__model_2_model_2_0_Reshape_1_output_0, axes=[1], starts=x2paddle__model_2_model_2_1_Constant_1_output_0_cast, ends=x2paddle__model_2_model_2_1_Mul_output_0_cast)
        x2paddle__model_2_model_2_1_Mul_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_1_Mul_output_0, dtype='int32')
        x2paddle__model_2_model_2_1_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_1_Mul_1_output_0, dtype='int32')
        x2paddle__model_2_model_2_1_Slice_1_output_0 = paddle.slice(input=x2paddle__model_2_model_2_0_Reshape_1_output_0, axes=[1], starts=x2paddle__model_2_model_2_1_Mul_output_0_cast, ends=x2paddle__model_2_model_2_1_Mul_1_output_0_cast)
        x2paddle__model_2_model_2_1_branch2_branch2_0_Conv_output_0 = self.conv9(x2paddle__model_2_model_2_1_Slice_1_output_0)
        x2paddle__model_2_model_2_1_branch2_branch2_1_Relu_output_0 = self.relu6(x2paddle__model_2_model_2_1_branch2_branch2_0_Conv_output_0)
        x2paddle__model_2_model_2_1_branch2_branch2_2_Conv_output_0 = self.conv10(x2paddle__model_2_model_2_1_branch2_branch2_1_Relu_output_0)
        x2paddle__model_2_model_2_1_branch2_branch2_3_Conv_output_0 = self.conv11(x2paddle__model_2_model_2_1_branch2_branch2_2_Conv_output_0)
        x2paddle__model_2_model_2_1_branch2_branch2_4_Relu_output_0 = self.relu7(x2paddle__model_2_model_2_1_branch2_branch2_3_Conv_output_0)
        x2paddle__model_2_model_2_1_Concat_output_0 = paddle.concat(x=[x2paddle__model_2_model_2_1_Slice_output_0, x2paddle__model_2_model_2_1_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_2_model_2_1_Reshape_output_0 = paddle.reshape(x=x2paddle__model_2_model_2_1_Concat_output_0, shape=[1, 2, 60, 80, 60])
        x2paddle__model_2_model_2_1_Transpose_output_0 = paddle.transpose(x=x2paddle__model_2_model_2_1_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_2_model_2_1_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_2_model_2_1_Transpose_output_0, shape=[1, -1, 80, 60])
        x2paddle__model_2_model_2_2_Shape_output_0 = paddle.shape(input=x2paddle__model_2_model_2_1_Reshape_1_output_0)
        x2paddle__model_2_model_2_2_Shape_output_0 = paddle.cast(x=x2paddle__model_2_model_2_2_Shape_output_0, dtype='int64')
        x2paddle__model_2_model_2_2_Gather_output_0 = paddle.gather(x=x2paddle__model_2_model_2_2_Shape_output_0, index=x2paddle__model_2_model_2_2_Constant_output_0, axis=0)
        x2paddle__model_2_model_2_2_Add_output_0 = paddle.add(x=x2paddle__model_2_model_2_2_Gather_output_0, y=x2paddle__model_2_model_2_2_Constant_2_output_0)
        x2paddle__model_2_model_2_2_Div_output_0 = paddle.divide(x=x2paddle__model_2_model_2_2_Add_output_0, y=x2paddle__model_2_model_2_2_Constant_3_output_0)
        x2paddle__model_2_model_2_2_Mul_output_0 = paddle.multiply(x=x2paddle__model_2_model_2_2_Div_output_0, y=x2paddle__model_2_model_2_2_Constant_4_output_0)
        x2paddle__model_2_model_2_2_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_2_model_2_2_Div_output_0, y=x2paddle__model_2_model_2_2_Constant_5_output_0)
        x2paddle__model_2_model_2_2_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_2_Constant_1_output_0, dtype='int32')
        x2paddle__model_2_model_2_2_Mul_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_2_Mul_output_0, dtype='int32')
        x2paddle__model_2_model_2_2_Slice_output_0 = paddle.slice(input=x2paddle__model_2_model_2_1_Reshape_1_output_0, axes=[1], starts=x2paddle__model_2_model_2_2_Constant_1_output_0_cast, ends=x2paddle__model_2_model_2_2_Mul_output_0_cast)
        x2paddle__model_2_model_2_2_Mul_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_2_Mul_output_0, dtype='int32')
        x2paddle__model_2_model_2_2_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_2_model_2_2_Mul_1_output_0, dtype='int32')
        x2paddle__model_2_model_2_2_Slice_1_output_0 = paddle.slice(input=x2paddle__model_2_model_2_1_Reshape_1_output_0, axes=[1], starts=x2paddle__model_2_model_2_2_Mul_output_0_cast, ends=x2paddle__model_2_model_2_2_Mul_1_output_0_cast)
        x2paddle__model_2_model_2_2_branch2_branch2_0_Conv_output_0 = self.conv12(x2paddle__model_2_model_2_2_Slice_1_output_0)
        x2paddle__model_2_model_2_2_branch2_branch2_1_Relu_output_0 = self.relu8(x2paddle__model_2_model_2_2_branch2_branch2_0_Conv_output_0)
        x2paddle__model_2_model_2_2_branch2_branch2_2_Conv_output_0 = self.conv13(x2paddle__model_2_model_2_2_branch2_branch2_1_Relu_output_0)
        x2paddle__model_2_model_2_2_branch2_branch2_3_Conv_output_0 = self.conv14(x2paddle__model_2_model_2_2_branch2_branch2_2_Conv_output_0)
        x2paddle__model_2_model_2_2_branch2_branch2_4_Relu_output_0 = self.relu9(x2paddle__model_2_model_2_2_branch2_branch2_3_Conv_output_0)
        x2paddle__model_2_model_2_2_Concat_output_0 = paddle.concat(x=[x2paddle__model_2_model_2_2_Slice_output_0, x2paddle__model_2_model_2_2_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_2_model_2_2_Reshape_output_0 = paddle.reshape(x=x2paddle__model_2_model_2_2_Concat_output_0, shape=[1, 2, 60, 80, 60])
        x2paddle__model_2_model_2_2_Transpose_output_0 = paddle.transpose(x=x2paddle__model_2_model_2_2_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_2_model_2_2_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_2_model_2_2_Transpose_output_0, shape=[1, -1, 80, 60])
        x2paddle__model_3_branch1_branch1_0_Conv_output_0 = self.conv15(x2paddle__model_2_model_2_2_Reshape_1_output_0)
        x2paddle__model_3_branch2_branch2_0_Conv_output_0 = self.conv16(x2paddle__model_2_model_2_2_Reshape_1_output_0)
        x2paddle__model_3_branch1_branch1_1_Conv_output_0 = self.conv17(x2paddle__model_3_branch1_branch1_0_Conv_output_0)
        x2paddle__model_3_branch2_branch2_1_Relu_output_0 = self.relu10(x2paddle__model_3_branch2_branch2_0_Conv_output_0)
        x2paddle__model_3_branch1_branch1_2_Relu_output_0 = self.relu11(x2paddle__model_3_branch1_branch1_1_Conv_output_0)
        x2paddle__model_3_branch2_branch2_2_Conv_output_0 = self.conv18(x2paddle__model_3_branch2_branch2_1_Relu_output_0)
        x2paddle__model_3_branch2_branch2_3_Conv_output_0 = self.conv19(x2paddle__model_3_branch2_branch2_2_Conv_output_0)
        x2paddle__model_3_branch2_branch2_4_Relu_output_0 = self.relu12(x2paddle__model_3_branch2_branch2_3_Conv_output_0)
        x2paddle__model_3_Concat_output_0 = paddle.concat(x=[x2paddle__model_3_branch1_branch1_2_Relu_output_0, x2paddle__model_3_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_3_Reshape_output_0 = paddle.reshape(x=x2paddle__model_3_Concat_output_0, shape=[1, 2, 116, 40, 30])
        x2paddle__model_3_Transpose_output_0 = paddle.transpose(x=x2paddle__model_3_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_3_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_3_Transpose_output_0, shape=[1, -1, 40, 30])
        x2paddle__model_4_model_4_0_Shape_output_0 = paddle.shape(input=x2paddle__model_3_Reshape_1_output_0)
        x2paddle__model_4_model_4_0_Shape_output_0 = paddle.cast(x=x2paddle__model_4_model_4_0_Shape_output_0, dtype='int64')
        x2paddle__model_4_model_4_0_Gather_output_0 = paddle.gather(x=x2paddle__model_4_model_4_0_Shape_output_0, index=x2paddle__model_4_model_4_0_Constant_output_0, axis=0)
        x2paddle__model_4_model_4_0_Add_output_0 = paddle.add(x=x2paddle__model_4_model_4_0_Gather_output_0, y=x2paddle__model_4_model_4_0_Constant_2_output_0)
        x2paddle__model_4_model_4_0_Div_output_0 = paddle.divide(x=x2paddle__model_4_model_4_0_Add_output_0, y=x2paddle__model_4_model_4_0_Constant_3_output_0)
        x2paddle__model_4_model_4_0_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_0_Div_output_0, y=x2paddle__model_4_model_4_0_Constant_4_output_0)
        x2paddle__model_4_model_4_0_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_0_Div_output_0, y=x2paddle__model_4_model_4_0_Constant_5_output_0)
        x2paddle__model_4_model_4_0_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_0_Constant_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_0_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_0_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_0_Slice_output_0 = paddle.slice(input=x2paddle__model_3_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_0_Constant_1_output_0_cast, ends=x2paddle__model_4_model_4_0_Mul_output_0_cast)
        x2paddle__model_4_model_4_0_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_0_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_0_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_0_Mul_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_0_Slice_1_output_0 = paddle.slice(input=x2paddle__model_3_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_0_Mul_output_0_cast, ends=x2paddle__model_4_model_4_0_Mul_1_output_0_cast)
        x2paddle__model_4_model_4_0_branch2_branch2_0_Conv_output_0 = self.conv20(x2paddle__model_4_model_4_0_Slice_1_output_0)
        x2paddle__model_4_model_4_0_branch2_branch2_1_Relu_output_0 = self.relu13(x2paddle__model_4_model_4_0_branch2_branch2_0_Conv_output_0)
        x2paddle__model_4_model_4_0_branch2_branch2_2_Conv_output_0 = self.conv21(x2paddle__model_4_model_4_0_branch2_branch2_1_Relu_output_0)
        x2paddle__model_4_model_4_0_branch2_branch2_3_Conv_output_0 = self.conv22(x2paddle__model_4_model_4_0_branch2_branch2_2_Conv_output_0)
        x2paddle__model_4_model_4_0_branch2_branch2_4_Relu_output_0 = self.relu14(x2paddle__model_4_model_4_0_branch2_branch2_3_Conv_output_0)
        x2paddle__model_4_model_4_0_Concat_output_0 = paddle.concat(x=[x2paddle__model_4_model_4_0_Slice_output_0, x2paddle__model_4_model_4_0_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_4_model_4_0_Reshape_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_0_Concat_output_0, shape=[1, 2, 116, 40, 30])
        x2paddle__model_4_model_4_0_Transpose_output_0 = paddle.transpose(x=x2paddle__model_4_model_4_0_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_4_model_4_0_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_0_Transpose_output_0, shape=[1, -1, 40, 30])
        x2paddle__model_4_model_4_1_Shape_output_0 = paddle.shape(input=x2paddle__model_4_model_4_0_Reshape_1_output_0)
        x2paddle__model_4_model_4_1_Shape_output_0 = paddle.cast(x=x2paddle__model_4_model_4_1_Shape_output_0, dtype='int64')
        x2paddle__model_4_model_4_1_Gather_output_0 = paddle.gather(x=x2paddle__model_4_model_4_1_Shape_output_0, index=x2paddle__model_4_model_4_1_Constant_output_0, axis=0)
        x2paddle__model_4_model_4_1_Add_output_0 = paddle.add(x=x2paddle__model_4_model_4_1_Gather_output_0, y=x2paddle__model_4_model_4_1_Constant_2_output_0)
        x2paddle__model_4_model_4_1_Div_output_0 = paddle.divide(x=x2paddle__model_4_model_4_1_Add_output_0, y=x2paddle__model_4_model_4_1_Constant_3_output_0)
        x2paddle__model_4_model_4_1_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_1_Div_output_0, y=x2paddle__model_4_model_4_1_Constant_4_output_0)
        x2paddle__model_4_model_4_1_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_1_Div_output_0, y=x2paddle__model_4_model_4_1_Constant_5_output_0)
        x2paddle__model_4_model_4_1_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_1_Constant_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_1_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_1_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_1_Slice_output_0 = paddle.slice(input=x2paddle__model_4_model_4_0_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_1_Constant_1_output_0_cast, ends=x2paddle__model_4_model_4_1_Mul_output_0_cast)
        x2paddle__model_4_model_4_1_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_1_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_1_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_1_Mul_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_1_Slice_1_output_0 = paddle.slice(input=x2paddle__model_4_model_4_0_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_1_Mul_output_0_cast, ends=x2paddle__model_4_model_4_1_Mul_1_output_0_cast)
        x2paddle__model_4_model_4_1_branch2_branch2_0_Conv_output_0 = self.conv23(x2paddle__model_4_model_4_1_Slice_1_output_0)
        x2paddle__model_4_model_4_1_branch2_branch2_1_Relu_output_0 = self.relu15(x2paddle__model_4_model_4_1_branch2_branch2_0_Conv_output_0)
        x2paddle__model_4_model_4_1_branch2_branch2_2_Conv_output_0 = self.conv24(x2paddle__model_4_model_4_1_branch2_branch2_1_Relu_output_0)
        x2paddle__model_4_model_4_1_branch2_branch2_3_Conv_output_0 = self.conv25(x2paddle__model_4_model_4_1_branch2_branch2_2_Conv_output_0)
        x2paddle__model_4_model_4_1_branch2_branch2_4_Relu_output_0 = self.relu16(x2paddle__model_4_model_4_1_branch2_branch2_3_Conv_output_0)
        x2paddle__model_4_model_4_1_Concat_output_0 = paddle.concat(x=[x2paddle__model_4_model_4_1_Slice_output_0, x2paddle__model_4_model_4_1_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_4_model_4_1_Reshape_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_1_Concat_output_0, shape=[1, 2, 116, 40, 30])
        x2paddle__model_4_model_4_1_Transpose_output_0 = paddle.transpose(x=x2paddle__model_4_model_4_1_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_4_model_4_1_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_1_Transpose_output_0, shape=[1, -1, 40, 30])
        x2paddle__model_4_model_4_2_Shape_output_0 = paddle.shape(input=x2paddle__model_4_model_4_1_Reshape_1_output_0)
        x2paddle__model_4_model_4_2_Shape_output_0 = paddle.cast(x=x2paddle__model_4_model_4_2_Shape_output_0, dtype='int64')
        x2paddle__model_4_model_4_2_Gather_output_0 = paddle.gather(x=x2paddle__model_4_model_4_2_Shape_output_0, index=x2paddle__model_4_model_4_2_Constant_output_0, axis=0)
        x2paddle__model_4_model_4_2_Add_output_0 = paddle.add(x=x2paddle__model_4_model_4_2_Gather_output_0, y=x2paddle__model_4_model_4_2_Constant_2_output_0)
        x2paddle__model_4_model_4_2_Div_output_0 = paddle.divide(x=x2paddle__model_4_model_4_2_Add_output_0, y=x2paddle__model_4_model_4_2_Constant_3_output_0)
        x2paddle__model_4_model_4_2_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_2_Div_output_0, y=x2paddle__model_4_model_4_2_Constant_4_output_0)
        x2paddle__model_4_model_4_2_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_2_Div_output_0, y=x2paddle__model_4_model_4_2_Constant_5_output_0)
        x2paddle__model_4_model_4_2_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_2_Constant_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_2_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_2_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_2_Slice_output_0 = paddle.slice(input=x2paddle__model_4_model_4_1_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_2_Constant_1_output_0_cast, ends=x2paddle__model_4_model_4_2_Mul_output_0_cast)
        x2paddle__model_4_model_4_2_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_2_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_2_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_2_Mul_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_2_Slice_1_output_0 = paddle.slice(input=x2paddle__model_4_model_4_1_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_2_Mul_output_0_cast, ends=x2paddle__model_4_model_4_2_Mul_1_output_0_cast)
        x2paddle__model_4_model_4_2_branch2_branch2_0_Conv_output_0 = self.conv26(x2paddle__model_4_model_4_2_Slice_1_output_0)
        x2paddle__model_4_model_4_2_branch2_branch2_1_Relu_output_0 = self.relu17(x2paddle__model_4_model_4_2_branch2_branch2_0_Conv_output_0)
        x2paddle__model_4_model_4_2_branch2_branch2_2_Conv_output_0 = self.conv27(x2paddle__model_4_model_4_2_branch2_branch2_1_Relu_output_0)
        x2paddle__model_4_model_4_2_branch2_branch2_3_Conv_output_0 = self.conv28(x2paddle__model_4_model_4_2_branch2_branch2_2_Conv_output_0)
        x2paddle__model_4_model_4_2_branch2_branch2_4_Relu_output_0 = self.relu18(x2paddle__model_4_model_4_2_branch2_branch2_3_Conv_output_0)
        x2paddle__model_4_model_4_2_Concat_output_0 = paddle.concat(x=[x2paddle__model_4_model_4_2_Slice_output_0, x2paddle__model_4_model_4_2_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_4_model_4_2_Reshape_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_2_Concat_output_0, shape=[1, 2, 116, 40, 30])
        x2paddle__model_4_model_4_2_Transpose_output_0 = paddle.transpose(x=x2paddle__model_4_model_4_2_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_4_model_4_2_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_2_Transpose_output_0, shape=[1, -1, 40, 30])
        x2paddle__model_4_model_4_3_Shape_output_0 = paddle.shape(input=x2paddle__model_4_model_4_2_Reshape_1_output_0)
        x2paddle__model_4_model_4_3_Shape_output_0 = paddle.cast(x=x2paddle__model_4_model_4_3_Shape_output_0, dtype='int64')
        x2paddle__model_4_model_4_3_Gather_output_0 = paddle.gather(x=x2paddle__model_4_model_4_3_Shape_output_0, index=x2paddle__model_4_model_4_3_Constant_output_0, axis=0)
        x2paddle__model_4_model_4_3_Add_output_0 = paddle.add(x=x2paddle__model_4_model_4_3_Gather_output_0, y=x2paddle__model_4_model_4_3_Constant_2_output_0)
        x2paddle__model_4_model_4_3_Div_output_0 = paddle.divide(x=x2paddle__model_4_model_4_3_Add_output_0, y=x2paddle__model_4_model_4_3_Constant_3_output_0)
        x2paddle__model_4_model_4_3_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_3_Div_output_0, y=x2paddle__model_4_model_4_3_Constant_4_output_0)
        x2paddle__model_4_model_4_3_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_3_Div_output_0, y=x2paddle__model_4_model_4_3_Constant_5_output_0)
        x2paddle__model_4_model_4_3_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_3_Constant_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_3_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_3_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_3_Slice_output_0 = paddle.slice(input=x2paddle__model_4_model_4_2_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_3_Constant_1_output_0_cast, ends=x2paddle__model_4_model_4_3_Mul_output_0_cast)
        x2paddle__model_4_model_4_3_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_3_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_3_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_3_Mul_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_3_Slice_1_output_0 = paddle.slice(input=x2paddle__model_4_model_4_2_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_3_Mul_output_0_cast, ends=x2paddle__model_4_model_4_3_Mul_1_output_0_cast)
        x2paddle__model_4_model_4_3_branch2_branch2_0_Conv_output_0 = self.conv29(x2paddle__model_4_model_4_3_Slice_1_output_0)
        x2paddle__model_4_model_4_3_branch2_branch2_1_Relu_output_0 = self.relu19(x2paddle__model_4_model_4_3_branch2_branch2_0_Conv_output_0)
        x2paddle__model_4_model_4_3_branch2_branch2_2_Conv_output_0 = self.conv30(x2paddle__model_4_model_4_3_branch2_branch2_1_Relu_output_0)
        x2paddle__model_4_model_4_3_branch2_branch2_3_Conv_output_0 = self.conv31(x2paddle__model_4_model_4_3_branch2_branch2_2_Conv_output_0)
        x2paddle__model_4_model_4_3_branch2_branch2_4_Relu_output_0 = self.relu20(x2paddle__model_4_model_4_3_branch2_branch2_3_Conv_output_0)
        x2paddle__model_4_model_4_3_Concat_output_0 = paddle.concat(x=[x2paddle__model_4_model_4_3_Slice_output_0, x2paddle__model_4_model_4_3_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_4_model_4_3_Reshape_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_3_Concat_output_0, shape=[1, 2, 116, 40, 30])
        x2paddle__model_4_model_4_3_Transpose_output_0 = paddle.transpose(x=x2paddle__model_4_model_4_3_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_4_model_4_3_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_3_Transpose_output_0, shape=[1, -1, 40, 30])
        x2paddle__model_4_model_4_4_Shape_output_0 = paddle.shape(input=x2paddle__model_4_model_4_3_Reshape_1_output_0)
        x2paddle__model_4_model_4_4_Shape_output_0 = paddle.cast(x=x2paddle__model_4_model_4_4_Shape_output_0, dtype='int64')
        x2paddle__model_4_model_4_4_Gather_output_0 = paddle.gather(x=x2paddle__model_4_model_4_4_Shape_output_0, index=x2paddle__model_4_model_4_4_Constant_output_0, axis=0)
        x2paddle__model_4_model_4_4_Add_output_0 = paddle.add(x=x2paddle__model_4_model_4_4_Gather_output_0, y=x2paddle__model_4_model_4_4_Constant_2_output_0)
        x2paddle__model_4_model_4_4_Div_output_0 = paddle.divide(x=x2paddle__model_4_model_4_4_Add_output_0, y=x2paddle__model_4_model_4_4_Constant_3_output_0)
        x2paddle__model_4_model_4_4_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_4_Div_output_0, y=x2paddle__model_4_model_4_4_Constant_4_output_0)
        x2paddle__model_4_model_4_4_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_4_Div_output_0, y=x2paddle__model_4_model_4_4_Constant_5_output_0)
        x2paddle__model_4_model_4_4_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_4_Constant_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_4_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_4_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_4_Slice_output_0 = paddle.slice(input=x2paddle__model_4_model_4_3_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_4_Constant_1_output_0_cast, ends=x2paddle__model_4_model_4_4_Mul_output_0_cast)
        x2paddle__model_4_model_4_4_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_4_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_4_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_4_Mul_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_4_Slice_1_output_0 = paddle.slice(input=x2paddle__model_4_model_4_3_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_4_Mul_output_0_cast, ends=x2paddle__model_4_model_4_4_Mul_1_output_0_cast)
        x2paddle__model_4_model_4_4_branch2_branch2_0_Conv_output_0 = self.conv32(x2paddle__model_4_model_4_4_Slice_1_output_0)
        x2paddle__model_4_model_4_4_branch2_branch2_1_Relu_output_0 = self.relu21(x2paddle__model_4_model_4_4_branch2_branch2_0_Conv_output_0)
        x2paddle__model_4_model_4_4_branch2_branch2_2_Conv_output_0 = self.conv33(x2paddle__model_4_model_4_4_branch2_branch2_1_Relu_output_0)
        x2paddle__model_4_model_4_4_branch2_branch2_3_Conv_output_0 = self.conv34(x2paddle__model_4_model_4_4_branch2_branch2_2_Conv_output_0)
        x2paddle__model_4_model_4_4_branch2_branch2_4_Relu_output_0 = self.relu22(x2paddle__model_4_model_4_4_branch2_branch2_3_Conv_output_0)
        x2paddle__model_4_model_4_4_Concat_output_0 = paddle.concat(x=[x2paddle__model_4_model_4_4_Slice_output_0, x2paddle__model_4_model_4_4_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_4_model_4_4_Reshape_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_4_Concat_output_0, shape=[1, 2, 116, 40, 30])
        x2paddle__model_4_model_4_4_Transpose_output_0 = paddle.transpose(x=x2paddle__model_4_model_4_4_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_4_model_4_4_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_4_Transpose_output_0, shape=[1, -1, 40, 30])
        x2paddle__model_4_model_4_5_Shape_output_0 = paddle.shape(input=x2paddle__model_4_model_4_4_Reshape_1_output_0)
        x2paddle__model_4_model_4_5_Shape_output_0 = paddle.cast(x=x2paddle__model_4_model_4_5_Shape_output_0, dtype='int64')
        x2paddle__model_4_model_4_5_Gather_output_0 = paddle.gather(x=x2paddle__model_4_model_4_5_Shape_output_0, index=x2paddle__model_4_model_4_5_Constant_output_0, axis=0)
        x2paddle__model_4_model_4_5_Add_output_0 = paddle.add(x=x2paddle__model_4_model_4_5_Gather_output_0, y=x2paddle__model_4_model_4_5_Constant_2_output_0)
        x2paddle__model_4_model_4_5_Div_output_0 = paddle.divide(x=x2paddle__model_4_model_4_5_Add_output_0, y=x2paddle__model_4_model_4_5_Constant_3_output_0)
        x2paddle__model_4_model_4_5_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_5_Div_output_0, y=x2paddle__model_4_model_4_5_Constant_4_output_0)
        x2paddle__model_4_model_4_5_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_5_Div_output_0, y=x2paddle__model_4_model_4_5_Constant_5_output_0)
        x2paddle__model_4_model_4_5_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_5_Constant_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_5_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_5_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_5_Slice_output_0 = paddle.slice(input=x2paddle__model_4_model_4_4_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_5_Constant_1_output_0_cast, ends=x2paddle__model_4_model_4_5_Mul_output_0_cast)
        x2paddle__model_4_model_4_5_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_5_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_5_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_5_Mul_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_5_Slice_1_output_0 = paddle.slice(input=x2paddle__model_4_model_4_4_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_5_Mul_output_0_cast, ends=x2paddle__model_4_model_4_5_Mul_1_output_0_cast)
        x2paddle__model_4_model_4_5_branch2_branch2_0_Conv_output_0 = self.conv35(x2paddle__model_4_model_4_5_Slice_1_output_0)
        x2paddle__model_4_model_4_5_branch2_branch2_1_Relu_output_0 = self.relu23(x2paddle__model_4_model_4_5_branch2_branch2_0_Conv_output_0)
        x2paddle__model_4_model_4_5_branch2_branch2_2_Conv_output_0 = self.conv36(x2paddle__model_4_model_4_5_branch2_branch2_1_Relu_output_0)
        x2paddle__model_4_model_4_5_branch2_branch2_3_Conv_output_0 = self.conv37(x2paddle__model_4_model_4_5_branch2_branch2_2_Conv_output_0)
        x2paddle__model_4_model_4_5_branch2_branch2_4_Relu_output_0 = self.relu24(x2paddle__model_4_model_4_5_branch2_branch2_3_Conv_output_0)
        x2paddle__model_4_model_4_5_Concat_output_0 = paddle.concat(x=[x2paddle__model_4_model_4_5_Slice_output_0, x2paddle__model_4_model_4_5_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_4_model_4_5_Reshape_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_5_Concat_output_0, shape=[1, 2, 116, 40, 30])
        x2paddle__model_4_model_4_5_Transpose_output_0 = paddle.transpose(x=x2paddle__model_4_model_4_5_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_4_model_4_5_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_5_Transpose_output_0, shape=[1, -1, 40, 30])
        x2paddle__model_4_model_4_6_Shape_output_0 = paddle.shape(input=x2paddle__model_4_model_4_5_Reshape_1_output_0)
        x2paddle__model_4_model_4_6_Shape_output_0 = paddle.cast(x=x2paddle__model_4_model_4_6_Shape_output_0, dtype='int64')
        x2paddle__model_4_model_4_6_Gather_output_0 = paddle.gather(x=x2paddle__model_4_model_4_6_Shape_output_0, index=x2paddle__model_4_model_4_6_Constant_output_0, axis=0)
        x2paddle__model_4_model_4_6_Add_output_0 = paddle.add(x=x2paddle__model_4_model_4_6_Gather_output_0, y=x2paddle__model_4_model_4_6_Constant_2_output_0)
        x2paddle__model_4_model_4_6_Div_output_0 = paddle.divide(x=x2paddle__model_4_model_4_6_Add_output_0, y=x2paddle__model_4_model_4_6_Constant_3_output_0)
        x2paddle__model_4_model_4_6_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_6_Div_output_0, y=x2paddle__model_4_model_4_6_Constant_4_output_0)
        x2paddle__model_4_model_4_6_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_4_model_4_6_Div_output_0, y=x2paddle__model_4_model_4_6_Constant_5_output_0)
        x2paddle__model_4_model_4_6_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_6_Constant_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_6_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_6_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_6_Slice_output_0 = paddle.slice(input=x2paddle__model_4_model_4_5_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_6_Constant_1_output_0_cast, ends=x2paddle__model_4_model_4_6_Mul_output_0_cast)
        x2paddle__model_4_model_4_6_Mul_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_6_Mul_output_0, dtype='int32')
        x2paddle__model_4_model_4_6_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_4_model_4_6_Mul_1_output_0, dtype='int32')
        x2paddle__model_4_model_4_6_Slice_1_output_0 = paddle.slice(input=x2paddle__model_4_model_4_5_Reshape_1_output_0, axes=[1], starts=x2paddle__model_4_model_4_6_Mul_output_0_cast, ends=x2paddle__model_4_model_4_6_Mul_1_output_0_cast)
        x2paddle__model_4_model_4_6_branch2_branch2_0_Conv_output_0 = self.conv38(x2paddle__model_4_model_4_6_Slice_1_output_0)
        x2paddle__model_4_model_4_6_branch2_branch2_1_Relu_output_0 = self.relu25(x2paddle__model_4_model_4_6_branch2_branch2_0_Conv_output_0)
        x2paddle__model_4_model_4_6_branch2_branch2_2_Conv_output_0 = self.conv39(x2paddle__model_4_model_4_6_branch2_branch2_1_Relu_output_0)
        x2paddle__model_4_model_4_6_branch2_branch2_3_Conv_output_0 = self.conv40(x2paddle__model_4_model_4_6_branch2_branch2_2_Conv_output_0)
        x2paddle__model_4_model_4_6_branch2_branch2_4_Relu_output_0 = self.relu26(x2paddle__model_4_model_4_6_branch2_branch2_3_Conv_output_0)
        x2paddle__model_4_model_4_6_Concat_output_0 = paddle.concat(x=[x2paddle__model_4_model_4_6_Slice_output_0, x2paddle__model_4_model_4_6_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_4_model_4_6_Reshape_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_6_Concat_output_0, shape=[1, 2, 116, 40, 30])
        x2paddle__model_4_model_4_6_Transpose_output_0 = paddle.transpose(x=x2paddle__model_4_model_4_6_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_4_model_4_6_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_4_model_4_6_Transpose_output_0, shape=[1, -1, 40, 30])
        x2paddle__model_5_branch1_branch1_0_Conv_output_0 = self.conv41(x2paddle__model_4_model_4_6_Reshape_1_output_0)
        x2paddle__model_5_branch2_branch2_0_Conv_output_0 = self.conv42(x2paddle__model_4_model_4_6_Reshape_1_output_0)
        x2paddle__model_5_branch1_branch1_1_Conv_output_0 = self.conv43(x2paddle__model_5_branch1_branch1_0_Conv_output_0)
        x2paddle__model_5_branch2_branch2_1_Relu_output_0 = self.relu27(x2paddle__model_5_branch2_branch2_0_Conv_output_0)
        x2paddle__model_5_branch1_branch1_2_Relu_output_0 = self.relu28(x2paddle__model_5_branch1_branch1_1_Conv_output_0)
        x2paddle__model_5_branch2_branch2_2_Conv_output_0 = self.conv44(x2paddle__model_5_branch2_branch2_1_Relu_output_0)
        x2paddle__model_5_branch2_branch2_3_Conv_output_0 = self.conv45(x2paddle__model_5_branch2_branch2_2_Conv_output_0)
        x2paddle__model_5_branch2_branch2_4_Relu_output_0 = self.relu29(x2paddle__model_5_branch2_branch2_3_Conv_output_0)
        x2paddle__model_5_Concat_output_0 = paddle.concat(x=[x2paddle__model_5_branch1_branch1_2_Relu_output_0, x2paddle__model_5_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_5_Reshape_output_0 = paddle.reshape(x=x2paddle__model_5_Concat_output_0, shape=[1, 2, 232, 20, 15])
        x2paddle__model_5_Transpose_output_0 = paddle.transpose(x=x2paddle__model_5_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_5_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_5_Transpose_output_0, shape=[1, -1, 20, 15])
        x2paddle__model_6_model_6_0_Shape_output_0 = paddle.shape(input=x2paddle__model_5_Reshape_1_output_0)
        x2paddle__model_6_model_6_0_Shape_output_0 = paddle.cast(x=x2paddle__model_6_model_6_0_Shape_output_0, dtype='int64')
        x2paddle__model_6_model_6_0_Gather_output_0 = paddle.gather(x=x2paddle__model_6_model_6_0_Shape_output_0, index=x2paddle__model_6_model_6_0_Constant_output_0, axis=0)
        x2paddle__model_6_model_6_0_Add_output_0 = paddle.add(x=x2paddle__model_6_model_6_0_Gather_output_0, y=x2paddle__model_6_model_6_0_Constant_2_output_0)
        x2paddle__model_6_model_6_0_Div_output_0 = paddle.divide(x=x2paddle__model_6_model_6_0_Add_output_0, y=x2paddle__model_6_model_6_0_Constant_3_output_0)
        x2paddle__model_6_model_6_0_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_model_6_0_Div_output_0, y=x2paddle__model_6_model_6_0_Constant_4_output_0)
        x2paddle__model_6_model_6_0_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_6_model_6_0_Div_output_0, y=x2paddle__model_6_model_6_0_Constant_5_output_0)
        x2paddle__model_6_model_6_0_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_0_Constant_1_output_0, dtype='int32')
        x2paddle__model_6_model_6_0_Mul_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_0_Mul_output_0, dtype='int32')
        x2paddle__model_6_model_6_0_Slice_output_0 = paddle.slice(input=x2paddle__model_5_Reshape_1_output_0, axes=[1], starts=x2paddle__model_6_model_6_0_Constant_1_output_0_cast, ends=x2paddle__model_6_model_6_0_Mul_output_0_cast)
        x2paddle__model_6_model_6_0_Mul_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_0_Mul_output_0, dtype='int32')
        x2paddle__model_6_model_6_0_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_0_Mul_1_output_0, dtype='int32')
        x2paddle__model_6_model_6_0_Slice_1_output_0 = paddle.slice(input=x2paddle__model_5_Reshape_1_output_0, axes=[1], starts=x2paddle__model_6_model_6_0_Mul_output_0_cast, ends=x2paddle__model_6_model_6_0_Mul_1_output_0_cast)
        x2paddle__model_6_model_6_0_branch2_branch2_0_Conv_output_0 = self.conv46(x2paddle__model_6_model_6_0_Slice_1_output_0)
        x2paddle__model_6_model_6_0_branch2_branch2_1_Relu_output_0 = self.relu30(x2paddle__model_6_model_6_0_branch2_branch2_0_Conv_output_0)
        x2paddle__model_6_model_6_0_branch2_branch2_2_Conv_output_0 = self.conv47(x2paddle__model_6_model_6_0_branch2_branch2_1_Relu_output_0)
        x2paddle__model_6_model_6_0_branch2_branch2_3_Conv_output_0 = self.conv48(x2paddle__model_6_model_6_0_branch2_branch2_2_Conv_output_0)
        x2paddle__model_6_model_6_0_branch2_branch2_4_Relu_output_0 = self.relu31(x2paddle__model_6_model_6_0_branch2_branch2_3_Conv_output_0)
        x2paddle__model_6_model_6_0_Concat_output_0 = paddle.concat(x=[x2paddle__model_6_model_6_0_Slice_output_0, x2paddle__model_6_model_6_0_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_6_model_6_0_Reshape_output_0 = paddle.reshape(x=x2paddle__model_6_model_6_0_Concat_output_0, shape=[1, 2, 232, 20, 15])
        x2paddle__model_6_model_6_0_Transpose_output_0 = paddle.transpose(x=x2paddle__model_6_model_6_0_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_6_model_6_0_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_6_model_6_0_Transpose_output_0, shape=[1, -1, 20, 15])
        x2paddle__model_6_model_6_1_Shape_output_0 = paddle.shape(input=x2paddle__model_6_model_6_0_Reshape_1_output_0)
        x2paddle__model_6_model_6_1_Shape_output_0 = paddle.cast(x=x2paddle__model_6_model_6_1_Shape_output_0, dtype='int64')
        x2paddle__model_6_model_6_1_Gather_output_0 = paddle.gather(x=x2paddle__model_6_model_6_1_Shape_output_0, index=x2paddle__model_6_model_6_1_Constant_output_0, axis=0)
        x2paddle__model_6_model_6_1_Add_output_0 = paddle.add(x=x2paddle__model_6_model_6_1_Gather_output_0, y=x2paddle__model_6_model_6_1_Constant_2_output_0)
        x2paddle__model_6_model_6_1_Div_output_0 = paddle.divide(x=x2paddle__model_6_model_6_1_Add_output_0, y=x2paddle__model_6_model_6_1_Constant_3_output_0)
        x2paddle__model_6_model_6_1_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_model_6_1_Div_output_0, y=x2paddle__model_6_model_6_1_Constant_4_output_0)
        x2paddle__model_6_model_6_1_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_6_model_6_1_Div_output_0, y=x2paddle__model_6_model_6_1_Constant_5_output_0)
        x2paddle__model_6_model_6_1_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_1_Constant_1_output_0, dtype='int32')
        x2paddle__model_6_model_6_1_Mul_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_1_Mul_output_0, dtype='int32')
        x2paddle__model_6_model_6_1_Slice_output_0 = paddle.slice(input=x2paddle__model_6_model_6_0_Reshape_1_output_0, axes=[1], starts=x2paddle__model_6_model_6_1_Constant_1_output_0_cast, ends=x2paddle__model_6_model_6_1_Mul_output_0_cast)
        x2paddle__model_6_model_6_1_Mul_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_1_Mul_output_0, dtype='int32')
        x2paddle__model_6_model_6_1_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_1_Mul_1_output_0, dtype='int32')
        x2paddle__model_6_model_6_1_Slice_1_output_0 = paddle.slice(input=x2paddle__model_6_model_6_0_Reshape_1_output_0, axes=[1], starts=x2paddle__model_6_model_6_1_Mul_output_0_cast, ends=x2paddle__model_6_model_6_1_Mul_1_output_0_cast)
        x2paddle__model_6_model_6_1_branch2_branch2_0_Conv_output_0 = self.conv49(x2paddle__model_6_model_6_1_Slice_1_output_0)
        x2paddle__model_6_model_6_1_branch2_branch2_1_Relu_output_0 = self.relu32(x2paddle__model_6_model_6_1_branch2_branch2_0_Conv_output_0)
        x2paddle__model_6_model_6_1_branch2_branch2_2_Conv_output_0 = self.conv50(x2paddle__model_6_model_6_1_branch2_branch2_1_Relu_output_0)
        x2paddle__model_6_model_6_1_branch2_branch2_3_Conv_output_0 = self.conv51(x2paddle__model_6_model_6_1_branch2_branch2_2_Conv_output_0)
        x2paddle__model_6_model_6_1_branch2_branch2_4_Relu_output_0 = self.relu33(x2paddle__model_6_model_6_1_branch2_branch2_3_Conv_output_0)
        x2paddle__model_6_model_6_1_Concat_output_0 = paddle.concat(x=[x2paddle__model_6_model_6_1_Slice_output_0, x2paddle__model_6_model_6_1_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_6_model_6_1_Reshape_output_0 = paddle.reshape(x=x2paddle__model_6_model_6_1_Concat_output_0, shape=[1, 2, 232, 20, 15])
        x2paddle__model_6_model_6_1_Transpose_output_0 = paddle.transpose(x=x2paddle__model_6_model_6_1_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_6_model_6_1_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_6_model_6_1_Transpose_output_0, shape=[1, -1, 20, 15])
        x2paddle__model_6_model_6_2_Shape_output_0 = paddle.shape(input=x2paddle__model_6_model_6_1_Reshape_1_output_0)
        x2paddle__model_6_model_6_2_Shape_output_0 = paddle.cast(x=x2paddle__model_6_model_6_2_Shape_output_0, dtype='int64')
        x2paddle__model_6_model_6_2_Gather_output_0 = paddle.gather(x=x2paddle__model_6_model_6_2_Shape_output_0, index=x2paddle__model_6_model_6_2_Constant_output_0, axis=0)
        x2paddle__model_6_model_6_2_Add_output_0 = paddle.add(x=x2paddle__model_6_model_6_2_Gather_output_0, y=x2paddle__model_6_model_6_2_Constant_2_output_0)
        x2paddle__model_6_model_6_2_Div_output_0 = paddle.divide(x=x2paddle__model_6_model_6_2_Add_output_0, y=x2paddle__model_6_model_6_2_Constant_3_output_0)
        x2paddle__model_6_model_6_2_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_model_6_2_Div_output_0, y=x2paddle__model_6_model_6_2_Constant_4_output_0)
        x2paddle__model_6_model_6_2_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_6_model_6_2_Div_output_0, y=x2paddle__model_6_model_6_2_Constant_5_output_0)
        x2paddle__model_6_model_6_2_Constant_1_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_2_Constant_1_output_0, dtype='int32')
        x2paddle__model_6_model_6_2_Mul_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_2_Mul_output_0, dtype='int32')
        x2paddle__model_6_model_6_2_Slice_output_0 = paddle.slice(input=x2paddle__model_6_model_6_1_Reshape_1_output_0, axes=[1], starts=x2paddle__model_6_model_6_2_Constant_1_output_0_cast, ends=x2paddle__model_6_model_6_2_Mul_output_0_cast)
        x2paddle__model_6_model_6_2_Mul_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_2_Mul_output_0, dtype='int32')
        x2paddle__model_6_model_6_2_Mul_1_output_0_cast = paddle.cast(x=x2paddle__model_6_model_6_2_Mul_1_output_0, dtype='int32')
        x2paddle__model_6_model_6_2_Slice_1_output_0 = paddle.slice(input=x2paddle__model_6_model_6_1_Reshape_1_output_0, axes=[1], starts=x2paddle__model_6_model_6_2_Mul_output_0_cast, ends=x2paddle__model_6_model_6_2_Mul_1_output_0_cast)
        x2paddle__model_6_model_6_2_branch2_branch2_0_Conv_output_0 = self.conv52(x2paddle__model_6_model_6_2_Slice_1_output_0)
        x2paddle__model_6_model_6_2_branch2_branch2_1_Relu_output_0 = self.relu34(x2paddle__model_6_model_6_2_branch2_branch2_0_Conv_output_0)
        x2paddle__model_6_model_6_2_branch2_branch2_2_Conv_output_0 = self.conv53(x2paddle__model_6_model_6_2_branch2_branch2_1_Relu_output_0)
        x2paddle__model_6_model_6_2_branch2_branch2_3_Conv_output_0 = self.conv54(x2paddle__model_6_model_6_2_branch2_branch2_2_Conv_output_0)
        x2paddle__model_6_model_6_2_branch2_branch2_4_Relu_output_0 = self.relu35(x2paddle__model_6_model_6_2_branch2_branch2_3_Conv_output_0)
        x2paddle__model_6_model_6_2_Concat_output_0 = paddle.concat(x=[x2paddle__model_6_model_6_2_Slice_output_0, x2paddle__model_6_model_6_2_branch2_branch2_4_Relu_output_0], axis=1)
        x2paddle__model_6_model_6_2_Reshape_output_0 = paddle.reshape(x=x2paddle__model_6_model_6_2_Concat_output_0, shape=[1, 2, 232, 20, 15])
        x2paddle__model_6_model_6_2_Transpose_output_0 = paddle.transpose(x=x2paddle__model_6_model_6_2_Reshape_output_0, perm=[0, 2, 1, 3, 4])
        x2paddle__model_6_model_6_2_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_6_model_6_2_Transpose_output_0, shape=[1, -1, 20, 15])
        x2paddle__model_7_conv_Conv_output_0 = self.conv55(x2paddle__model_6_model_6_2_Reshape_1_output_0)
        x2paddle__model_7_act_Sigmoid_output_0 = self.sigmoid0(x2paddle__model_7_conv_Conv_output_0)
        x2paddle__model_7_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_7_conv_Conv_output_0, y=x2paddle__model_7_act_Sigmoid_output_0)
        x2paddle__model_8_Resize_output_0 = paddle.nn.functional.interpolate(x=x2paddle__model_7_act_Mul_output_0, scale_factor=[2.0, 2.0], mode='nearest', align_mode=1)
        x2paddle__model_9_Concat_output_0 = paddle.concat(x=[x2paddle__model_8_Resize_output_0, x2paddle__model_4_model_4_6_Reshape_1_output_0], axis=1)
        x2paddle__model_10_cv1_conv_Conv_output_0 = self.conv56(x2paddle__model_9_Concat_output_0)
        x2paddle__model_10_cv2_conv_Conv_output_0 = self.conv57(x2paddle__model_9_Concat_output_0)
        x2paddle__model_10_cv1_act_Sigmoid_output_0 = self.sigmoid1(x2paddle__model_10_cv1_conv_Conv_output_0)
        x2paddle__model_10_cv2_act_Sigmoid_output_0 = self.sigmoid2(x2paddle__model_10_cv2_conv_Conv_output_0)
        x2paddle__model_10_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_10_cv1_conv_Conv_output_0, y=x2paddle__model_10_cv1_act_Sigmoid_output_0)
        x2paddle__model_10_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_10_cv2_conv_Conv_output_0, y=x2paddle__model_10_cv2_act_Sigmoid_output_0)
        x2paddle__model_10_m_m_0_cv1_conv_Conv_output_0 = self.conv58(x2paddle__model_10_cv1_act_Mul_output_0)
        x2paddle__model_10_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid3(x2paddle__model_10_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_10_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_10_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_10_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_10_m_m_0_cv2_conv_Conv_output_0 = self.conv59(x2paddle__model_10_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_10_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid4(x2paddle__model_10_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_10_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_10_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_10_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_10_Concat_output_0 = paddle.concat(x=[x2paddle__model_10_m_m_0_cv2_act_Mul_output_0, x2paddle__model_10_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_10_cv3_conv_Conv_output_0 = self.conv60(x2paddle__model_10_Concat_output_0)
        x2paddle__model_10_cv3_act_Sigmoid_output_0 = self.sigmoid5(x2paddle__model_10_cv3_conv_Conv_output_0)
        x2paddle__model_10_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_10_cv3_conv_Conv_output_0, y=x2paddle__model_10_cv3_act_Sigmoid_output_0)
        x2paddle__model_11_conv_Conv_output_0 = self.conv61(x2paddle__model_10_cv3_act_Mul_output_0)
        x2paddle__model_11_act_Sigmoid_output_0 = self.sigmoid6(x2paddle__model_11_conv_Conv_output_0)
        x2paddle__model_11_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_11_conv_Conv_output_0, y=x2paddle__model_11_act_Sigmoid_output_0)
        x2paddle__model_12_Resize_output_0 = paddle.nn.functional.interpolate(x=x2paddle__model_11_act_Mul_output_0, scale_factor=[2.0, 2.0], mode='nearest', align_mode=1)
        x2paddle__model_13_Concat_output_0 = paddle.concat(x=[x2paddle__model_12_Resize_output_0, x2paddle__model_2_model_2_2_Reshape_1_output_0], axis=1)
        x2paddle__model_14_cv1_conv_Conv_output_0 = self.conv62(x2paddle__model_13_Concat_output_0)
        x2paddle__model_14_cv2_conv_Conv_output_0 = self.conv63(x2paddle__model_13_Concat_output_0)
        x2paddle__model_14_cv1_act_Sigmoid_output_0 = self.sigmoid7(x2paddle__model_14_cv1_conv_Conv_output_0)
        x2paddle__model_14_cv2_act_Sigmoid_output_0 = self.sigmoid8(x2paddle__model_14_cv2_conv_Conv_output_0)
        x2paddle__model_14_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_14_cv1_conv_Conv_output_0, y=x2paddle__model_14_cv1_act_Sigmoid_output_0)
        x2paddle__model_14_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_14_cv2_conv_Conv_output_0, y=x2paddle__model_14_cv2_act_Sigmoid_output_0)
        x2paddle__model_14_m_m_0_cv1_conv_Conv_output_0 = self.conv64(x2paddle__model_14_cv1_act_Mul_output_0)
        x2paddle__model_14_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid9(x2paddle__model_14_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_14_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_14_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_14_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_14_m_m_0_cv2_conv_Conv_output_0 = self.conv65(x2paddle__model_14_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_14_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid10(x2paddle__model_14_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_14_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_14_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_14_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_14_Concat_output_0 = paddle.concat(x=[x2paddle__model_14_m_m_0_cv2_act_Mul_output_0, x2paddle__model_14_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_14_cv3_conv_Conv_output_0 = self.conv66(x2paddle__model_14_Concat_output_0)
        x2paddle__model_14_cv3_act_Sigmoid_output_0 = self.sigmoid11(x2paddle__model_14_cv3_conv_Conv_output_0)
        x2paddle__model_14_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_14_cv3_conv_Conv_output_0, y=x2paddle__model_14_cv3_act_Sigmoid_output_0)
        x2paddle__model_15_conv_Conv_output_0 = self.conv67(x2paddle__model_14_cv3_act_Mul_output_0)
        x2paddle__model_21_m_0_Conv_output_0 = self.conv68(x2paddle__model_14_cv3_act_Mul_output_0)
        x2paddle__model_15_act_Sigmoid_output_0 = self.sigmoid12(x2paddle__model_15_conv_Conv_output_0)
        x2paddle__model_21_Reshape_output_0 = paddle.reshape(x=x2paddle__model_21_m_0_Conv_output_0, shape=[1, 3, 9, 80, 60])
        x2paddle__model_15_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_15_conv_Conv_output_0, y=x2paddle__model_15_act_Sigmoid_output_0)
        x2paddle__model_21_Transpose_output_0 = paddle.transpose(x=x2paddle__model_21_Reshape_output_0, perm=[0, 1, 3, 4, 2])
        x2paddle__model_16_Concat_output_0 = paddle.concat(x=[x2paddle__model_15_act_Mul_output_0, x2paddle__model_11_act_Mul_output_0], axis=1)
        x2paddle__model_21_Sigmoid_output_0 = self.sigmoid13(x2paddle__model_21_Transpose_output_0)
        x2paddle__model_17_cv1_conv_Conv_output_0 = self.conv69(x2paddle__model_16_Concat_output_0)
        x2paddle__model_17_cv2_conv_Conv_output_0 = self.conv70(x2paddle__model_16_Concat_output_0)
        x2paddle__model_21_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_21_Sigmoid_output_0, shape=[1, -1, 9])
        x2paddle__model_17_cv1_act_Sigmoid_output_0 = self.sigmoid14(x2paddle__model_17_cv1_conv_Conv_output_0)
        x2paddle__model_17_cv2_act_Sigmoid_output_0 = self.sigmoid15(x2paddle__model_17_cv2_conv_Conv_output_0)
        x2paddle__model_17_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_17_cv1_conv_Conv_output_0, y=x2paddle__model_17_cv1_act_Sigmoid_output_0)
        x2paddle__model_17_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_17_cv2_conv_Conv_output_0, y=x2paddle__model_17_cv2_act_Sigmoid_output_0)
        x2paddle__model_17_m_m_0_cv1_conv_Conv_output_0 = self.conv71(x2paddle__model_17_cv1_act_Mul_output_0)
        x2paddle__model_17_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid16(x2paddle__model_17_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_17_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_17_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_17_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_17_m_m_0_cv2_conv_Conv_output_0 = self.conv72(x2paddle__model_17_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_17_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid17(x2paddle__model_17_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_17_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_17_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_17_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_17_Concat_output_0 = paddle.concat(x=[x2paddle__model_17_m_m_0_cv2_act_Mul_output_0, x2paddle__model_17_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_17_cv3_conv_Conv_output_0 = self.conv73(x2paddle__model_17_Concat_output_0)
        x2paddle__model_17_cv3_act_Sigmoid_output_0 = self.sigmoid18(x2paddle__model_17_cv3_conv_Conv_output_0)
        x2paddle__model_17_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_17_cv3_conv_Conv_output_0, y=x2paddle__model_17_cv3_act_Sigmoid_output_0)
        x2paddle__model_18_conv_Conv_output_0 = self.conv74(x2paddle__model_17_cv3_act_Mul_output_0)
        x2paddle__model_21_m_1_Conv_output_0 = self.conv75(x2paddle__model_17_cv3_act_Mul_output_0)
        x2paddle__model_18_act_Sigmoid_output_0 = self.sigmoid19(x2paddle__model_18_conv_Conv_output_0)
        x2paddle__model_21_Reshape_2_output_0 = paddle.reshape(x=x2paddle__model_21_m_1_Conv_output_0, shape=[1, 3, 9, 40, 30])
        x2paddle__model_18_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_18_conv_Conv_output_0, y=x2paddle__model_18_act_Sigmoid_output_0)
        x2paddle__model_21_Transpose_1_output_0 = paddle.transpose(x=x2paddle__model_21_Reshape_2_output_0, perm=[0, 1, 3, 4, 2])
        x2paddle__model_19_Concat_output_0 = paddle.concat(x=[x2paddle__model_18_act_Mul_output_0, x2paddle__model_7_act_Mul_output_0], axis=1)
        x2paddle__model_21_Sigmoid_1_output_0 = self.sigmoid20(x2paddle__model_21_Transpose_1_output_0)
        x2paddle__model_20_cv1_conv_Conv_output_0 = self.conv76(x2paddle__model_19_Concat_output_0)
        x2paddle__model_20_cv2_conv_Conv_output_0 = self.conv77(x2paddle__model_19_Concat_output_0)
        x2paddle__model_21_Reshape_3_output_0 = paddle.reshape(x=x2paddle__model_21_Sigmoid_1_output_0, shape=[1, -1, 9])
        x2paddle__model_20_cv1_act_Sigmoid_output_0 = self.sigmoid21(x2paddle__model_20_cv1_conv_Conv_output_0)
        x2paddle__model_20_cv2_act_Sigmoid_output_0 = self.sigmoid22(x2paddle__model_20_cv2_conv_Conv_output_0)
        x2paddle__model_20_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_20_cv1_conv_Conv_output_0, y=x2paddle__model_20_cv1_act_Sigmoid_output_0)
        x2paddle__model_20_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_20_cv2_conv_Conv_output_0, y=x2paddle__model_20_cv2_act_Sigmoid_output_0)
        x2paddle__model_20_m_m_0_cv1_conv_Conv_output_0 = self.conv78(x2paddle__model_20_cv1_act_Mul_output_0)
        x2paddle__model_20_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid23(x2paddle__model_20_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_20_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_20_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_20_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_20_m_m_0_cv2_conv_Conv_output_0 = self.conv79(x2paddle__model_20_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_20_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid24(x2paddle__model_20_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_20_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_20_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_20_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_20_Concat_output_0 = paddle.concat(x=[x2paddle__model_20_m_m_0_cv2_act_Mul_output_0, x2paddle__model_20_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_20_cv3_conv_Conv_output_0 = self.conv80(x2paddle__model_20_Concat_output_0)
        x2paddle__model_20_cv3_act_Sigmoid_output_0 = self.sigmoid25(x2paddle__model_20_cv3_conv_Conv_output_0)
        x2paddle__model_20_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_20_cv3_conv_Conv_output_0, y=x2paddle__model_20_cv3_act_Sigmoid_output_0)
        x2paddle__model_21_m_2_Conv_output_0 = self.conv81(x2paddle__model_20_cv3_act_Mul_output_0)
        x2paddle__model_21_Reshape_4_output_0 = paddle.reshape(x=x2paddle__model_21_m_2_Conv_output_0, shape=[1, 3, 9, 20, 15])
        x2paddle__model_21_Transpose_2_output_0 = paddle.transpose(x=x2paddle__model_21_Reshape_4_output_0, perm=[0, 1, 3, 4, 2])
        x2paddle__model_21_Sigmoid_2_output_0 = self.sigmoid26(x2paddle__model_21_Transpose_2_output_0)
        x2paddle__model_21_Reshape_5_output_0 = paddle.reshape(x=x2paddle__model_21_Sigmoid_2_output_0, shape=[1, -1, 9])
        x2paddle_output = paddle.concat(x=[x2paddle__model_21_Reshape_1_output_0, x2paddle__model_21_Reshape_3_output_0, x2paddle__model_21_Reshape_5_output_0], axis=1)
        return x2paddle_output

def main(x2paddle_images):
    # There are 1 inputs.
    # x2paddle_images: shape-[1, 3, 640, 480], type-float32.
    paddle.disable_static()
    params = paddle.load(r'/home/miiku/桌面/YOLOv5-Lite-master/runs/train/exp3/weights/pd_model/model.pdparams')
    model = ONNXModel()
    model.set_dict(params, use_structured_name=True)
    model.eval()
    out = model(x2paddle_images)
    return out
