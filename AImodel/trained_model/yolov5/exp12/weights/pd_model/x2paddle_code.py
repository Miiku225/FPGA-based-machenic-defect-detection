import paddle
import math
from x2paddle.op_mapper.onnx2paddle import onnx_custom_layer as x2paddle_nn

class ONNXModel(paddle.nn.Layer):
    def __init__(self):
        super(ONNXModel, self).__init__()
        self.x2paddle__model_24_Constant_2_output_0 = self.create_parameter(shape=[1, 3, 80, 80, 2], attr='x2paddle__model_24_Constant_2_output_0', dtype='float32', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_24_Constant_6_output_0 = self.create_parameter(shape=[1, 3, 80, 80, 2], attr='x2paddle__model_24_Constant_6_output_0', dtype='float32', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_24_Constant_10_output_0 = self.create_parameter(shape=[1, 3, 40, 40, 2], attr='x2paddle__model_24_Constant_10_output_0', dtype='float32', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_24_Constant_14_output_0 = self.create_parameter(shape=[1, 3, 40, 40, 2], attr='x2paddle__model_24_Constant_14_output_0', dtype='float32', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_24_Constant_18_output_0 = self.create_parameter(shape=[1, 3, 20, 20, 2], attr='x2paddle__model_24_Constant_18_output_0', dtype='float32', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.x2paddle__model_24_Constant_22_output_0 = self.create_parameter(shape=[1, 3, 20, 20, 2], attr='x2paddle__model_24_Constant_22_output_0', dtype='float32', default_initializer=paddle.nn.initializer.Constant(value=0.0))
        self.conv0 = paddle.nn.Conv2D(in_channels=3, out_channels=32, kernel_size=[6, 6], stride=2, padding=2)
        self.sigmoid0 = paddle.nn.Sigmoid()
        self.conv1 = paddle.nn.Conv2D(in_channels=32, out_channels=64, kernel_size=[3, 3], stride=2, padding=1)
        self.sigmoid1 = paddle.nn.Sigmoid()
        self.conv2 = paddle.nn.Conv2D(in_channels=64, out_channels=32, kernel_size=[1, 1])
        self.conv3 = paddle.nn.Conv2D(in_channels=64, out_channels=32, kernel_size=[1, 1])
        self.sigmoid2 = paddle.nn.Sigmoid()
        self.sigmoid3 = paddle.nn.Sigmoid()
        self.conv4 = paddle.nn.Conv2D(in_channels=32, out_channels=32, kernel_size=[1, 1])
        self.sigmoid4 = paddle.nn.Sigmoid()
        self.conv5 = paddle.nn.Conv2D(in_channels=32, out_channels=32, kernel_size=[3, 3], padding=1)
        self.sigmoid5 = paddle.nn.Sigmoid()
        self.conv6 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[1, 1])
        self.sigmoid6 = paddle.nn.Sigmoid()
        self.conv7 = paddle.nn.Conv2D(in_channels=64, out_channels=128, kernel_size=[3, 3], stride=2, padding=1)
        self.sigmoid7 = paddle.nn.Sigmoid()
        self.conv8 = paddle.nn.Conv2D(in_channels=128, out_channels=64, kernel_size=[1, 1])
        self.conv9 = paddle.nn.Conv2D(in_channels=128, out_channels=64, kernel_size=[1, 1])
        self.sigmoid8 = paddle.nn.Sigmoid()
        self.sigmoid9 = paddle.nn.Sigmoid()
        self.conv10 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[1, 1])
        self.sigmoid10 = paddle.nn.Sigmoid()
        self.conv11 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1)
        self.sigmoid11 = paddle.nn.Sigmoid()
        self.conv12 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[1, 1])
        self.sigmoid12 = paddle.nn.Sigmoid()
        self.conv13 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1)
        self.sigmoid13 = paddle.nn.Sigmoid()
        self.conv14 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[1, 1])
        self.sigmoid14 = paddle.nn.Sigmoid()
        self.conv15 = paddle.nn.Conv2D(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=2, padding=1)
        self.sigmoid15 = paddle.nn.Sigmoid()
        self.conv16 = paddle.nn.Conv2D(in_channels=256, out_channels=128, kernel_size=[1, 1])
        self.conv17 = paddle.nn.Conv2D(in_channels=256, out_channels=128, kernel_size=[1, 1])
        self.sigmoid16 = paddle.nn.Sigmoid()
        self.sigmoid17 = paddle.nn.Sigmoid()
        self.conv18 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[1, 1])
        self.sigmoid18 = paddle.nn.Sigmoid()
        self.conv19 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[3, 3], padding=1)
        self.sigmoid19 = paddle.nn.Sigmoid()
        self.conv20 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[1, 1])
        self.sigmoid20 = paddle.nn.Sigmoid()
        self.conv21 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[3, 3], padding=1)
        self.sigmoid21 = paddle.nn.Sigmoid()
        self.conv22 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[1, 1])
        self.sigmoid22 = paddle.nn.Sigmoid()
        self.conv23 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[3, 3], padding=1)
        self.sigmoid23 = paddle.nn.Sigmoid()
        self.conv24 = paddle.nn.Conv2D(in_channels=256, out_channels=256, kernel_size=[1, 1])
        self.sigmoid24 = paddle.nn.Sigmoid()
        self.conv25 = paddle.nn.Conv2D(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=2, padding=1)
        self.sigmoid25 = paddle.nn.Sigmoid()
        self.conv26 = paddle.nn.Conv2D(in_channels=512, out_channels=256, kernel_size=[1, 1])
        self.conv27 = paddle.nn.Conv2D(in_channels=512, out_channels=256, kernel_size=[1, 1])
        self.sigmoid26 = paddle.nn.Sigmoid()
        self.sigmoid27 = paddle.nn.Sigmoid()
        self.conv28 = paddle.nn.Conv2D(in_channels=256, out_channels=256, kernel_size=[1, 1])
        self.sigmoid28 = paddle.nn.Sigmoid()
        self.conv29 = paddle.nn.Conv2D(in_channels=256, out_channels=256, kernel_size=[3, 3], padding=1)
        self.sigmoid29 = paddle.nn.Sigmoid()
        self.conv30 = paddle.nn.Conv2D(in_channels=512, out_channels=512, kernel_size=[1, 1])
        self.sigmoid30 = paddle.nn.Sigmoid()
        self.conv31 = paddle.nn.Conv2D(in_channels=512, out_channels=256, kernel_size=[1, 1])
        self.sigmoid31 = paddle.nn.Sigmoid()
        self.pool0 = paddle.nn.MaxPool2D(kernel_size=[5, 5], stride=1, padding=2)
        self.pool1 = paddle.nn.MaxPool2D(kernel_size=[5, 5], stride=1, padding=2)
        self.pool2 = paddle.nn.MaxPool2D(kernel_size=[5, 5], stride=1, padding=2)
        self.conv32 = paddle.nn.Conv2D(in_channels=1024, out_channels=512, kernel_size=[1, 1])
        self.sigmoid32 = paddle.nn.Sigmoid()
        self.conv33 = paddle.nn.Conv2D(in_channels=512, out_channels=256, kernel_size=[1, 1])
        self.sigmoid33 = paddle.nn.Sigmoid()
        self.conv34 = paddle.nn.Conv2D(in_channels=512, out_channels=128, kernel_size=[1, 1])
        self.conv35 = paddle.nn.Conv2D(in_channels=512, out_channels=128, kernel_size=[1, 1])
        self.sigmoid34 = paddle.nn.Sigmoid()
        self.sigmoid35 = paddle.nn.Sigmoid()
        self.conv36 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[1, 1])
        self.sigmoid36 = paddle.nn.Sigmoid()
        self.conv37 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[3, 3], padding=1)
        self.sigmoid37 = paddle.nn.Sigmoid()
        self.conv38 = paddle.nn.Conv2D(in_channels=256, out_channels=256, kernel_size=[1, 1])
        self.sigmoid38 = paddle.nn.Sigmoid()
        self.conv39 = paddle.nn.Conv2D(in_channels=256, out_channels=128, kernel_size=[1, 1])
        self.sigmoid39 = paddle.nn.Sigmoid()
        self.conv40 = paddle.nn.Conv2D(in_channels=256, out_channels=64, kernel_size=[1, 1])
        self.conv41 = paddle.nn.Conv2D(in_channels=256, out_channels=64, kernel_size=[1, 1])
        self.sigmoid40 = paddle.nn.Sigmoid()
        self.sigmoid41 = paddle.nn.Sigmoid()
        self.conv42 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[1, 1])
        self.sigmoid42 = paddle.nn.Sigmoid()
        self.conv43 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1)
        self.sigmoid43 = paddle.nn.Sigmoid()
        self.conv44 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[1, 1])
        self.sigmoid44 = paddle.nn.Sigmoid()
        self.conv45 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=2, padding=1)
        self.conv46 = paddle.nn.Conv2D(in_channels=128, out_channels=27, kernel_size=[1, 1])
        self.sigmoid45 = paddle.nn.Sigmoid()
        self.sigmoid46 = paddle.nn.Sigmoid()
        self.conv47 = paddle.nn.Conv2D(in_channels=256, out_channels=128, kernel_size=[1, 1])
        self.conv48 = paddle.nn.Conv2D(in_channels=256, out_channels=128, kernel_size=[1, 1])
        self.sigmoid47 = paddle.nn.Sigmoid()
        self.sigmoid48 = paddle.nn.Sigmoid()
        self.conv49 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[1, 1])
        self.sigmoid49 = paddle.nn.Sigmoid()
        self.conv50 = paddle.nn.Conv2D(in_channels=128, out_channels=128, kernel_size=[3, 3], padding=1)
        self.sigmoid50 = paddle.nn.Sigmoid()
        self.conv51 = paddle.nn.Conv2D(in_channels=256, out_channels=256, kernel_size=[1, 1])
        self.sigmoid51 = paddle.nn.Sigmoid()
        self.conv52 = paddle.nn.Conv2D(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=2, padding=1)
        self.conv53 = paddle.nn.Conv2D(in_channels=256, out_channels=27, kernel_size=[1, 1])
        self.sigmoid52 = paddle.nn.Sigmoid()
        self.sigmoid53 = paddle.nn.Sigmoid()
        self.conv54 = paddle.nn.Conv2D(in_channels=512, out_channels=256, kernel_size=[1, 1])
        self.conv55 = paddle.nn.Conv2D(in_channels=512, out_channels=256, kernel_size=[1, 1])
        self.sigmoid54 = paddle.nn.Sigmoid()
        self.sigmoid55 = paddle.nn.Sigmoid()
        self.conv56 = paddle.nn.Conv2D(in_channels=256, out_channels=256, kernel_size=[1, 1])
        self.sigmoid56 = paddle.nn.Sigmoid()
        self.conv57 = paddle.nn.Conv2D(in_channels=256, out_channels=256, kernel_size=[3, 3], padding=1)
        self.sigmoid57 = paddle.nn.Sigmoid()
        self.conv58 = paddle.nn.Conv2D(in_channels=512, out_channels=512, kernel_size=[1, 1])
        self.sigmoid58 = paddle.nn.Sigmoid()
        self.conv59 = paddle.nn.Conv2D(in_channels=512, out_channels=27, kernel_size=[1, 1])
        self.sigmoid59 = paddle.nn.Sigmoid()

    def forward(self, x2paddle_images):
        x2paddle__model_24_Constant_1_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=2.0)
        x2paddle__model_24_Constant_2_output_0 = self.x2paddle__model_24_Constant_2_output_0
        x2paddle__model_24_Constant_3_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=8.0)
        x2paddle__model_24_Constant_4_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=2.0)
        x2paddle__model_24_Constant_5_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=2.0)
        x2paddle__model_24_Constant_6_output_0 = self.x2paddle__model_24_Constant_6_output_0
        x2paddle__model_24_Constant_9_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=2.0)
        x2paddle__model_24_Constant_10_output_0 = self.x2paddle__model_24_Constant_10_output_0
        x2paddle__model_24_Constant_11_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=16.0)
        x2paddle__model_24_Constant_12_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=2.0)
        x2paddle__model_24_Constant_13_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=2.0)
        x2paddle__model_24_Constant_14_output_0 = self.x2paddle__model_24_Constant_14_output_0
        x2paddle__model_24_Constant_17_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=2.0)
        x2paddle__model_24_Constant_18_output_0 = self.x2paddle__model_24_Constant_18_output_0
        x2paddle__model_24_Constant_19_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=32.0)
        x2paddle__model_24_Constant_20_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=2.0)
        x2paddle__model_24_Constant_21_output_0 = paddle.full(dtype='float32', shape=[1], fill_value=2.0)
        x2paddle__model_24_Constant_22_output_0 = self.x2paddle__model_24_Constant_22_output_0
        x2paddle__model_0_conv_Conv_output_0 = self.conv0(x2paddle_images)
        x2paddle__model_0_act_Sigmoid_output_0 = self.sigmoid0(x2paddle__model_0_conv_Conv_output_0)
        x2paddle__model_0_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_0_conv_Conv_output_0, y=x2paddle__model_0_act_Sigmoid_output_0)
        x2paddle__model_1_conv_Conv_output_0 = self.conv1(x2paddle__model_0_act_Mul_output_0)
        x2paddle__model_1_act_Sigmoid_output_0 = self.sigmoid1(x2paddle__model_1_conv_Conv_output_0)
        x2paddle__model_1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_1_conv_Conv_output_0, y=x2paddle__model_1_act_Sigmoid_output_0)
        x2paddle__model_2_cv1_conv_Conv_output_0 = self.conv2(x2paddle__model_1_act_Mul_output_0)
        x2paddle__model_2_cv2_conv_Conv_output_0 = self.conv3(x2paddle__model_1_act_Mul_output_0)
        x2paddle__model_2_cv1_act_Sigmoid_output_0 = self.sigmoid2(x2paddle__model_2_cv1_conv_Conv_output_0)
        x2paddle__model_2_cv2_act_Sigmoid_output_0 = self.sigmoid3(x2paddle__model_2_cv2_conv_Conv_output_0)
        x2paddle__model_2_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_2_cv1_conv_Conv_output_0, y=x2paddle__model_2_cv1_act_Sigmoid_output_0)
        x2paddle__model_2_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_2_cv2_conv_Conv_output_0, y=x2paddle__model_2_cv2_act_Sigmoid_output_0)
        x2paddle__model_2_m_m_0_cv1_conv_Conv_output_0 = self.conv4(x2paddle__model_2_cv1_act_Mul_output_0)
        x2paddle__model_2_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid4(x2paddle__model_2_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_2_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_2_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_2_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_2_m_m_0_cv2_conv_Conv_output_0 = self.conv5(x2paddle__model_2_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_2_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid5(x2paddle__model_2_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_2_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_2_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_2_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_2_m_m_0_Add_output_0 = paddle.add(x=x2paddle__model_2_cv1_act_Mul_output_0, y=x2paddle__model_2_m_m_0_cv2_act_Mul_output_0)
        x2paddle__model_2_Concat_output_0 = paddle.concat(x=[x2paddle__model_2_m_m_0_Add_output_0, x2paddle__model_2_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_2_cv3_conv_Conv_output_0 = self.conv6(x2paddle__model_2_Concat_output_0)
        x2paddle__model_2_cv3_act_Sigmoid_output_0 = self.sigmoid6(x2paddle__model_2_cv3_conv_Conv_output_0)
        x2paddle__model_2_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_2_cv3_conv_Conv_output_0, y=x2paddle__model_2_cv3_act_Sigmoid_output_0)
        x2paddle__model_3_conv_Conv_output_0 = self.conv7(x2paddle__model_2_cv3_act_Mul_output_0)
        x2paddle__model_3_act_Sigmoid_output_0 = self.sigmoid7(x2paddle__model_3_conv_Conv_output_0)
        x2paddle__model_3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_3_conv_Conv_output_0, y=x2paddle__model_3_act_Sigmoid_output_0)
        x2paddle__model_4_cv1_conv_Conv_output_0 = self.conv8(x2paddle__model_3_act_Mul_output_0)
        x2paddle__model_4_cv2_conv_Conv_output_0 = self.conv9(x2paddle__model_3_act_Mul_output_0)
        x2paddle__model_4_cv1_act_Sigmoid_output_0 = self.sigmoid8(x2paddle__model_4_cv1_conv_Conv_output_0)
        x2paddle__model_4_cv2_act_Sigmoid_output_0 = self.sigmoid9(x2paddle__model_4_cv2_conv_Conv_output_0)
        x2paddle__model_4_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_cv1_conv_Conv_output_0, y=x2paddle__model_4_cv1_act_Sigmoid_output_0)
        x2paddle__model_4_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_cv2_conv_Conv_output_0, y=x2paddle__model_4_cv2_act_Sigmoid_output_0)
        x2paddle__model_4_m_m_0_cv1_conv_Conv_output_0 = self.conv10(x2paddle__model_4_cv1_act_Mul_output_0)
        x2paddle__model_4_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid10(x2paddle__model_4_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_4_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_4_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_4_m_m_0_cv2_conv_Conv_output_0 = self.conv11(x2paddle__model_4_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_4_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid11(x2paddle__model_4_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_4_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_4_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_4_m_m_0_Add_output_0 = paddle.add(x=x2paddle__model_4_cv1_act_Mul_output_0, y=x2paddle__model_4_m_m_0_cv2_act_Mul_output_0)
        x2paddle__model_4_m_m_1_cv1_conv_Conv_output_0 = self.conv12(x2paddle__model_4_m_m_0_Add_output_0)
        x2paddle__model_4_m_m_1_cv1_act_Sigmoid_output_0 = self.sigmoid12(x2paddle__model_4_m_m_1_cv1_conv_Conv_output_0)
        x2paddle__model_4_m_m_1_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_m_m_1_cv1_conv_Conv_output_0, y=x2paddle__model_4_m_m_1_cv1_act_Sigmoid_output_0)
        x2paddle__model_4_m_m_1_cv2_conv_Conv_output_0 = self.conv13(x2paddle__model_4_m_m_1_cv1_act_Mul_output_0)
        x2paddle__model_4_m_m_1_cv2_act_Sigmoid_output_0 = self.sigmoid13(x2paddle__model_4_m_m_1_cv2_conv_Conv_output_0)
        x2paddle__model_4_m_m_1_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_m_m_1_cv2_conv_Conv_output_0, y=x2paddle__model_4_m_m_1_cv2_act_Sigmoid_output_0)
        x2paddle__model_4_m_m_1_Add_output_0 = paddle.add(x=x2paddle__model_4_m_m_0_Add_output_0, y=x2paddle__model_4_m_m_1_cv2_act_Mul_output_0)
        x2paddle__model_4_Concat_output_0 = paddle.concat(x=[x2paddle__model_4_m_m_1_Add_output_0, x2paddle__model_4_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_4_cv3_conv_Conv_output_0 = self.conv14(x2paddle__model_4_Concat_output_0)
        x2paddle__model_4_cv3_act_Sigmoid_output_0 = self.sigmoid14(x2paddle__model_4_cv3_conv_Conv_output_0)
        x2paddle__model_4_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_4_cv3_conv_Conv_output_0, y=x2paddle__model_4_cv3_act_Sigmoid_output_0)
        x2paddle__model_5_conv_Conv_output_0 = self.conv15(x2paddle__model_4_cv3_act_Mul_output_0)
        x2paddle__model_5_act_Sigmoid_output_0 = self.sigmoid15(x2paddle__model_5_conv_Conv_output_0)
        x2paddle__model_5_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_5_conv_Conv_output_0, y=x2paddle__model_5_act_Sigmoid_output_0)
        x2paddle__model_6_cv1_conv_Conv_output_0 = self.conv16(x2paddle__model_5_act_Mul_output_0)
        x2paddle__model_6_cv2_conv_Conv_output_0 = self.conv17(x2paddle__model_5_act_Mul_output_0)
        x2paddle__model_6_cv1_act_Sigmoid_output_0 = self.sigmoid16(x2paddle__model_6_cv1_conv_Conv_output_0)
        x2paddle__model_6_cv2_act_Sigmoid_output_0 = self.sigmoid17(x2paddle__model_6_cv2_conv_Conv_output_0)
        x2paddle__model_6_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_cv1_conv_Conv_output_0, y=x2paddle__model_6_cv1_act_Sigmoid_output_0)
        x2paddle__model_6_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_cv2_conv_Conv_output_0, y=x2paddle__model_6_cv2_act_Sigmoid_output_0)
        x2paddle__model_6_m_m_0_cv1_conv_Conv_output_0 = self.conv18(x2paddle__model_6_cv1_act_Mul_output_0)
        x2paddle__model_6_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid18(x2paddle__model_6_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_6_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_6_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_6_m_m_0_cv2_conv_Conv_output_0 = self.conv19(x2paddle__model_6_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_6_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid19(x2paddle__model_6_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_6_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_6_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_6_m_m_0_Add_output_0 = paddle.add(x=x2paddle__model_6_cv1_act_Mul_output_0, y=x2paddle__model_6_m_m_0_cv2_act_Mul_output_0)
        x2paddle__model_6_m_m_1_cv1_conv_Conv_output_0 = self.conv20(x2paddle__model_6_m_m_0_Add_output_0)
        x2paddle__model_6_m_m_1_cv1_act_Sigmoid_output_0 = self.sigmoid20(x2paddle__model_6_m_m_1_cv1_conv_Conv_output_0)
        x2paddle__model_6_m_m_1_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_m_m_1_cv1_conv_Conv_output_0, y=x2paddle__model_6_m_m_1_cv1_act_Sigmoid_output_0)
        x2paddle__model_6_m_m_1_cv2_conv_Conv_output_0 = self.conv21(x2paddle__model_6_m_m_1_cv1_act_Mul_output_0)
        x2paddle__model_6_m_m_1_cv2_act_Sigmoid_output_0 = self.sigmoid21(x2paddle__model_6_m_m_1_cv2_conv_Conv_output_0)
        x2paddle__model_6_m_m_1_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_m_m_1_cv2_conv_Conv_output_0, y=x2paddle__model_6_m_m_1_cv2_act_Sigmoid_output_0)
        x2paddle__model_6_m_m_1_Add_output_0 = paddle.add(x=x2paddle__model_6_m_m_0_Add_output_0, y=x2paddle__model_6_m_m_1_cv2_act_Mul_output_0)
        x2paddle__model_6_m_m_2_cv1_conv_Conv_output_0 = self.conv22(x2paddle__model_6_m_m_1_Add_output_0)
        x2paddle__model_6_m_m_2_cv1_act_Sigmoid_output_0 = self.sigmoid22(x2paddle__model_6_m_m_2_cv1_conv_Conv_output_0)
        x2paddle__model_6_m_m_2_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_m_m_2_cv1_conv_Conv_output_0, y=x2paddle__model_6_m_m_2_cv1_act_Sigmoid_output_0)
        x2paddle__model_6_m_m_2_cv2_conv_Conv_output_0 = self.conv23(x2paddle__model_6_m_m_2_cv1_act_Mul_output_0)
        x2paddle__model_6_m_m_2_cv2_act_Sigmoid_output_0 = self.sigmoid23(x2paddle__model_6_m_m_2_cv2_conv_Conv_output_0)
        x2paddle__model_6_m_m_2_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_m_m_2_cv2_conv_Conv_output_0, y=x2paddle__model_6_m_m_2_cv2_act_Sigmoid_output_0)
        x2paddle__model_6_m_m_2_Add_output_0 = paddle.add(x=x2paddle__model_6_m_m_1_Add_output_0, y=x2paddle__model_6_m_m_2_cv2_act_Mul_output_0)
        x2paddle__model_6_Concat_output_0 = paddle.concat(x=[x2paddle__model_6_m_m_2_Add_output_0, x2paddle__model_6_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_6_cv3_conv_Conv_output_0 = self.conv24(x2paddle__model_6_Concat_output_0)
        x2paddle__model_6_cv3_act_Sigmoid_output_0 = self.sigmoid24(x2paddle__model_6_cv3_conv_Conv_output_0)
        x2paddle__model_6_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_6_cv3_conv_Conv_output_0, y=x2paddle__model_6_cv3_act_Sigmoid_output_0)
        x2paddle__model_7_conv_Conv_output_0 = self.conv25(x2paddle__model_6_cv3_act_Mul_output_0)
        x2paddle__model_7_act_Sigmoid_output_0 = self.sigmoid25(x2paddle__model_7_conv_Conv_output_0)
        x2paddle__model_7_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_7_conv_Conv_output_0, y=x2paddle__model_7_act_Sigmoid_output_0)
        x2paddle__model_8_cv1_conv_Conv_output_0 = self.conv26(x2paddle__model_7_act_Mul_output_0)
        x2paddle__model_8_cv2_conv_Conv_output_0 = self.conv27(x2paddle__model_7_act_Mul_output_0)
        x2paddle__model_8_cv1_act_Sigmoid_output_0 = self.sigmoid26(x2paddle__model_8_cv1_conv_Conv_output_0)
        x2paddle__model_8_cv2_act_Sigmoid_output_0 = self.sigmoid27(x2paddle__model_8_cv2_conv_Conv_output_0)
        x2paddle__model_8_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_8_cv1_conv_Conv_output_0, y=x2paddle__model_8_cv1_act_Sigmoid_output_0)
        x2paddle__model_8_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_8_cv2_conv_Conv_output_0, y=x2paddle__model_8_cv2_act_Sigmoid_output_0)
        x2paddle__model_8_m_m_0_cv1_conv_Conv_output_0 = self.conv28(x2paddle__model_8_cv1_act_Mul_output_0)
        x2paddle__model_8_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid28(x2paddle__model_8_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_8_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_8_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_8_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_8_m_m_0_cv2_conv_Conv_output_0 = self.conv29(x2paddle__model_8_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_8_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid29(x2paddle__model_8_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_8_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_8_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_8_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_8_m_m_0_Add_output_0 = paddle.add(x=x2paddle__model_8_cv1_act_Mul_output_0, y=x2paddle__model_8_m_m_0_cv2_act_Mul_output_0)
        x2paddle__model_8_Concat_output_0 = paddle.concat(x=[x2paddle__model_8_m_m_0_Add_output_0, x2paddle__model_8_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_8_cv3_conv_Conv_output_0 = self.conv30(x2paddle__model_8_Concat_output_0)
        x2paddle__model_8_cv3_act_Sigmoid_output_0 = self.sigmoid30(x2paddle__model_8_cv3_conv_Conv_output_0)
        x2paddle__model_8_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_8_cv3_conv_Conv_output_0, y=x2paddle__model_8_cv3_act_Sigmoid_output_0)
        x2paddle__model_9_cv1_conv_Conv_output_0 = self.conv31(x2paddle__model_8_cv3_act_Mul_output_0)
        x2paddle__model_9_cv1_act_Sigmoid_output_0 = self.sigmoid31(x2paddle__model_9_cv1_conv_Conv_output_0)
        x2paddle__model_9_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_9_cv1_conv_Conv_output_0, y=x2paddle__model_9_cv1_act_Sigmoid_output_0)
        x2paddle__model_9_m_MaxPool_output_0 = self.pool0(x2paddle__model_9_cv1_act_Mul_output_0)
        x2paddle__model_9_m_1_MaxPool_output_0 = self.pool1(x2paddle__model_9_m_MaxPool_output_0)
        x2paddle__model_9_m_2_MaxPool_output_0 = self.pool2(x2paddle__model_9_m_1_MaxPool_output_0)
        x2paddle__model_9_Concat_output_0 = paddle.concat(x=[x2paddle__model_9_cv1_act_Mul_output_0, x2paddle__model_9_m_MaxPool_output_0, x2paddle__model_9_m_1_MaxPool_output_0, x2paddle__model_9_m_2_MaxPool_output_0], axis=1)
        x2paddle__model_9_cv2_conv_Conv_output_0 = self.conv32(x2paddle__model_9_Concat_output_0)
        x2paddle__model_9_cv2_act_Sigmoid_output_0 = self.sigmoid32(x2paddle__model_9_cv2_conv_Conv_output_0)
        x2paddle__model_9_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_9_cv2_conv_Conv_output_0, y=x2paddle__model_9_cv2_act_Sigmoid_output_0)
        x2paddle__model_10_conv_Conv_output_0 = self.conv33(x2paddle__model_9_cv2_act_Mul_output_0)
        x2paddle__model_10_act_Sigmoid_output_0 = self.sigmoid33(x2paddle__model_10_conv_Conv_output_0)
        x2paddle__model_10_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_10_conv_Conv_output_0, y=x2paddle__model_10_act_Sigmoid_output_0)
        x2paddle__model_11_Resize_output_0 = paddle.nn.functional.interpolate(x=x2paddle__model_10_act_Mul_output_0, scale_factor=[2.0, 2.0], mode='nearest', align_mode=1)
        x2paddle__model_12_Concat_output_0 = paddle.concat(x=[x2paddle__model_11_Resize_output_0, x2paddle__model_6_cv3_act_Mul_output_0], axis=1)
        x2paddle__model_13_cv1_conv_Conv_output_0 = self.conv34(x2paddle__model_12_Concat_output_0)
        x2paddle__model_13_cv2_conv_Conv_output_0 = self.conv35(x2paddle__model_12_Concat_output_0)
        x2paddle__model_13_cv1_act_Sigmoid_output_0 = self.sigmoid34(x2paddle__model_13_cv1_conv_Conv_output_0)
        x2paddle__model_13_cv2_act_Sigmoid_output_0 = self.sigmoid35(x2paddle__model_13_cv2_conv_Conv_output_0)
        x2paddle__model_13_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_13_cv1_conv_Conv_output_0, y=x2paddle__model_13_cv1_act_Sigmoid_output_0)
        x2paddle__model_13_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_13_cv2_conv_Conv_output_0, y=x2paddle__model_13_cv2_act_Sigmoid_output_0)
        x2paddle__model_13_m_m_0_cv1_conv_Conv_output_0 = self.conv36(x2paddle__model_13_cv1_act_Mul_output_0)
        x2paddle__model_13_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid36(x2paddle__model_13_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_13_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_13_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_13_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_13_m_m_0_cv2_conv_Conv_output_0 = self.conv37(x2paddle__model_13_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_13_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid37(x2paddle__model_13_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_13_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_13_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_13_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_13_Concat_output_0 = paddle.concat(x=[x2paddle__model_13_m_m_0_cv2_act_Mul_output_0, x2paddle__model_13_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_13_cv3_conv_Conv_output_0 = self.conv38(x2paddle__model_13_Concat_output_0)
        x2paddle__model_13_cv3_act_Sigmoid_output_0 = self.sigmoid38(x2paddle__model_13_cv3_conv_Conv_output_0)
        x2paddle__model_13_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_13_cv3_conv_Conv_output_0, y=x2paddle__model_13_cv3_act_Sigmoid_output_0)
        x2paddle__model_14_conv_Conv_output_0 = self.conv39(x2paddle__model_13_cv3_act_Mul_output_0)
        x2paddle__model_14_act_Sigmoid_output_0 = self.sigmoid39(x2paddle__model_14_conv_Conv_output_0)
        x2paddle__model_14_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_14_conv_Conv_output_0, y=x2paddle__model_14_act_Sigmoid_output_0)
        x2paddle__model_15_Resize_output_0 = paddle.nn.functional.interpolate(x=x2paddle__model_14_act_Mul_output_0, scale_factor=[2.0, 2.0], mode='nearest', align_mode=1)
        x2paddle__model_16_Concat_output_0 = paddle.concat(x=[x2paddle__model_15_Resize_output_0, x2paddle__model_4_cv3_act_Mul_output_0], axis=1)
        x2paddle__model_17_cv1_conv_Conv_output_0 = self.conv40(x2paddle__model_16_Concat_output_0)
        x2paddle__model_17_cv2_conv_Conv_output_0 = self.conv41(x2paddle__model_16_Concat_output_0)
        x2paddle__model_17_cv1_act_Sigmoid_output_0 = self.sigmoid40(x2paddle__model_17_cv1_conv_Conv_output_0)
        x2paddle__model_17_cv2_act_Sigmoid_output_0 = self.sigmoid41(x2paddle__model_17_cv2_conv_Conv_output_0)
        x2paddle__model_17_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_17_cv1_conv_Conv_output_0, y=x2paddle__model_17_cv1_act_Sigmoid_output_0)
        x2paddle__model_17_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_17_cv2_conv_Conv_output_0, y=x2paddle__model_17_cv2_act_Sigmoid_output_0)
        x2paddle__model_17_m_m_0_cv1_conv_Conv_output_0 = self.conv42(x2paddle__model_17_cv1_act_Mul_output_0)
        x2paddle__model_17_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid42(x2paddle__model_17_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_17_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_17_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_17_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_17_m_m_0_cv2_conv_Conv_output_0 = self.conv43(x2paddle__model_17_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_17_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid43(x2paddle__model_17_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_17_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_17_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_17_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_17_Concat_output_0 = paddle.concat(x=[x2paddle__model_17_m_m_0_cv2_act_Mul_output_0, x2paddle__model_17_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_17_cv3_conv_Conv_output_0 = self.conv44(x2paddle__model_17_Concat_output_0)
        x2paddle__model_17_cv3_act_Sigmoid_output_0 = self.sigmoid44(x2paddle__model_17_cv3_conv_Conv_output_0)
        x2paddle__model_17_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_17_cv3_conv_Conv_output_0, y=x2paddle__model_17_cv3_act_Sigmoid_output_0)
        x2paddle__model_18_conv_Conv_output_0 = self.conv45(x2paddle__model_17_cv3_act_Mul_output_0)
        x2paddle__model_24_m_0_Conv_output_0 = self.conv46(x2paddle__model_17_cv3_act_Mul_output_0)
        x2paddle__model_18_act_Sigmoid_output_0 = self.sigmoid45(x2paddle__model_18_conv_Conv_output_0)
        x2paddle__model_24_Reshape_output_0 = paddle.reshape(x=x2paddle__model_24_m_0_Conv_output_0, shape=[1, 3, 9, 80, 80])
        x2paddle__model_18_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_18_conv_Conv_output_0, y=x2paddle__model_18_act_Sigmoid_output_0)
        x2paddle__model_24_Transpose_output_0 = paddle.transpose(x=x2paddle__model_24_Reshape_output_0, perm=[0, 1, 3, 4, 2])
        x2paddle__model_19_Concat_output_0 = paddle.concat(x=[x2paddle__model_18_act_Mul_output_0, x2paddle__model_14_act_Mul_output_0], axis=1)
        x2paddle__model_24_Sigmoid_output_0 = self.sigmoid46(x2paddle__model_24_Transpose_output_0)
        x2paddle__model_20_cv1_conv_Conv_output_0 = self.conv47(x2paddle__model_19_Concat_output_0)
        x2paddle__model_20_cv2_conv_Conv_output_0 = self.conv48(x2paddle__model_19_Concat_output_0)
        x2paddle__model_24_Split_output_0_p0,x2paddle__model_24_Split_output_0_p1,x2paddle__model_24_Split_output_0_p2 = paddle.split(x=x2paddle__model_24_Sigmoid_output_0, num_or_sections=[2, 2, 5], axis=4)
        x2paddle__model_20_cv1_act_Sigmoid_output_0 = self.sigmoid47(x2paddle__model_20_cv1_conv_Conv_output_0)
        x2paddle__model_20_cv2_act_Sigmoid_output_0 = self.sigmoid48(x2paddle__model_20_cv2_conv_Conv_output_0)
        x2paddle__model_24_Mul_output_0 = paddle.multiply(x=x2paddle__model_24_Split_output_0_p0, y=x2paddle__model_24_Constant_1_output_0)
        x2paddle__model_24_Mul_2_output_0 = paddle.multiply(x=x2paddle__model_24_Split_output_0_p1, y=x2paddle__model_24_Constant_4_output_0)
        x2paddle__model_20_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_20_cv1_conv_Conv_output_0, y=x2paddle__model_20_cv1_act_Sigmoid_output_0)
        x2paddle__model_20_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_20_cv2_conv_Conv_output_0, y=x2paddle__model_20_cv2_act_Sigmoid_output_0)
        x2paddle__model_24_Add_output_0 = paddle.add(x=x2paddle__model_24_Mul_output_0, y=x2paddle__model_24_Constant_2_output_0)
        x2paddle__model_24_Pow_output_0 = paddle.pow(x=x2paddle__model_24_Mul_2_output_0, y=x2paddle__model_24_Constant_5_output_0)
        x2paddle__model_20_m_m_0_cv1_conv_Conv_output_0 = self.conv49(x2paddle__model_20_cv1_act_Mul_output_0)
        x2paddle__model_24_Mul_1_output_0 = paddle.multiply(x=x2paddle__model_24_Add_output_0, y=x2paddle__model_24_Constant_3_output_0)
        x2paddle__model_24_Mul_3_output_0 = paddle.multiply(x=x2paddle__model_24_Pow_output_0, y=x2paddle__model_24_Constant_6_output_0)
        x2paddle__model_20_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid49(x2paddle__model_20_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_24_Concat_output_0 = paddle.concat(x=[x2paddle__model_24_Mul_1_output_0, x2paddle__model_24_Mul_3_output_0, x2paddle__model_24_Split_output_0_p2], axis=4)
        x2paddle__model_20_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_20_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_20_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_24_Reshape_1_output_0 = paddle.reshape(x=x2paddle__model_24_Concat_output_0, shape=[1, 19200, 9])
        x2paddle__model_20_m_m_0_cv2_conv_Conv_output_0 = self.conv50(x2paddle__model_20_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_20_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid50(x2paddle__model_20_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_20_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_20_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_20_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_20_Concat_output_0 = paddle.concat(x=[x2paddle__model_20_m_m_0_cv2_act_Mul_output_0, x2paddle__model_20_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_20_cv3_conv_Conv_output_0 = self.conv51(x2paddle__model_20_Concat_output_0)
        x2paddle__model_20_cv3_act_Sigmoid_output_0 = self.sigmoid51(x2paddle__model_20_cv3_conv_Conv_output_0)
        x2paddle__model_20_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_20_cv3_conv_Conv_output_0, y=x2paddle__model_20_cv3_act_Sigmoid_output_0)
        x2paddle__model_21_conv_Conv_output_0 = self.conv52(x2paddle__model_20_cv3_act_Mul_output_0)
        x2paddle__model_24_m_1_Conv_output_0 = self.conv53(x2paddle__model_20_cv3_act_Mul_output_0)
        x2paddle__model_21_act_Sigmoid_output_0 = self.sigmoid52(x2paddle__model_21_conv_Conv_output_0)
        x2paddle__model_24_Reshape_2_output_0 = paddle.reshape(x=x2paddle__model_24_m_1_Conv_output_0, shape=[1, 3, 9, 40, 40])
        x2paddle__model_21_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_21_conv_Conv_output_0, y=x2paddle__model_21_act_Sigmoid_output_0)
        x2paddle__model_24_Transpose_1_output_0 = paddle.transpose(x=x2paddle__model_24_Reshape_2_output_0, perm=[0, 1, 3, 4, 2])
        x2paddle__model_22_Concat_output_0 = paddle.concat(x=[x2paddle__model_21_act_Mul_output_0, x2paddle__model_10_act_Mul_output_0], axis=1)
        x2paddle__model_24_Sigmoid_1_output_0 = self.sigmoid53(x2paddle__model_24_Transpose_1_output_0)
        x2paddle__model_23_cv1_conv_Conv_output_0 = self.conv54(x2paddle__model_22_Concat_output_0)
        x2paddle__model_23_cv2_conv_Conv_output_0 = self.conv55(x2paddle__model_22_Concat_output_0)
        x2paddle__model_24_Split_1_output_0_p0,x2paddle__model_24_Split_1_output_0_p1,x2paddle__model_24_Split_1_output_0_p2 = paddle.split(x=x2paddle__model_24_Sigmoid_1_output_0, num_or_sections=[2, 2, 5], axis=4)
        x2paddle__model_23_cv1_act_Sigmoid_output_0 = self.sigmoid54(x2paddle__model_23_cv1_conv_Conv_output_0)
        x2paddle__model_23_cv2_act_Sigmoid_output_0 = self.sigmoid55(x2paddle__model_23_cv2_conv_Conv_output_0)
        x2paddle__model_24_Mul_4_output_0 = paddle.multiply(x=x2paddle__model_24_Split_1_output_0_p0, y=x2paddle__model_24_Constant_9_output_0)
        x2paddle__model_24_Mul_6_output_0 = paddle.multiply(x=x2paddle__model_24_Split_1_output_0_p1, y=x2paddle__model_24_Constant_12_output_0)
        x2paddle__model_23_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_23_cv1_conv_Conv_output_0, y=x2paddle__model_23_cv1_act_Sigmoid_output_0)
        x2paddle__model_23_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_23_cv2_conv_Conv_output_0, y=x2paddle__model_23_cv2_act_Sigmoid_output_0)
        x2paddle__model_24_Add_1_output_0 = paddle.add(x=x2paddle__model_24_Mul_4_output_0, y=x2paddle__model_24_Constant_10_output_0)
        x2paddle__model_24_Pow_1_output_0 = paddle.pow(x=x2paddle__model_24_Mul_6_output_0, y=x2paddle__model_24_Constant_13_output_0)
        x2paddle__model_23_m_m_0_cv1_conv_Conv_output_0 = self.conv56(x2paddle__model_23_cv1_act_Mul_output_0)
        x2paddle__model_24_Mul_5_output_0 = paddle.multiply(x=x2paddle__model_24_Add_1_output_0, y=x2paddle__model_24_Constant_11_output_0)
        x2paddle__model_24_Mul_7_output_0 = paddle.multiply(x=x2paddle__model_24_Pow_1_output_0, y=x2paddle__model_24_Constant_14_output_0)
        x2paddle__model_23_m_m_0_cv1_act_Sigmoid_output_0 = self.sigmoid56(x2paddle__model_23_m_m_0_cv1_conv_Conv_output_0)
        x2paddle__model_24_Concat_1_output_0 = paddle.concat(x=[x2paddle__model_24_Mul_5_output_0, x2paddle__model_24_Mul_7_output_0, x2paddle__model_24_Split_1_output_0_p2], axis=4)
        x2paddle__model_23_m_m_0_cv1_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_23_m_m_0_cv1_conv_Conv_output_0, y=x2paddle__model_23_m_m_0_cv1_act_Sigmoid_output_0)
        x2paddle__model_24_Reshape_3_output_0 = paddle.reshape(x=x2paddle__model_24_Concat_1_output_0, shape=[1, 4800, 9])
        x2paddle__model_23_m_m_0_cv2_conv_Conv_output_0 = self.conv57(x2paddle__model_23_m_m_0_cv1_act_Mul_output_0)
        x2paddle__model_23_m_m_0_cv2_act_Sigmoid_output_0 = self.sigmoid57(x2paddle__model_23_m_m_0_cv2_conv_Conv_output_0)
        x2paddle__model_23_m_m_0_cv2_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_23_m_m_0_cv2_conv_Conv_output_0, y=x2paddle__model_23_m_m_0_cv2_act_Sigmoid_output_0)
        x2paddle__model_23_Concat_output_0 = paddle.concat(x=[x2paddle__model_23_m_m_0_cv2_act_Mul_output_0, x2paddle__model_23_cv2_act_Mul_output_0], axis=1)
        x2paddle__model_23_cv3_conv_Conv_output_0 = self.conv58(x2paddle__model_23_Concat_output_0)
        x2paddle__model_23_cv3_act_Sigmoid_output_0 = self.sigmoid58(x2paddle__model_23_cv3_conv_Conv_output_0)
        x2paddle__model_23_cv3_act_Mul_output_0 = paddle.multiply(x=x2paddle__model_23_cv3_conv_Conv_output_0, y=x2paddle__model_23_cv3_act_Sigmoid_output_0)
        x2paddle__model_24_m_2_Conv_output_0 = self.conv59(x2paddle__model_23_cv3_act_Mul_output_0)
        x2paddle__model_24_Reshape_4_output_0 = paddle.reshape(x=x2paddle__model_24_m_2_Conv_output_0, shape=[1, 3, 9, 20, 20])
        x2paddle__model_24_Transpose_2_output_0 = paddle.transpose(x=x2paddle__model_24_Reshape_4_output_0, perm=[0, 1, 3, 4, 2])
        x2paddle__model_24_Sigmoid_2_output_0 = self.sigmoid59(x2paddle__model_24_Transpose_2_output_0)
        x2paddle__model_24_Split_2_output_0_p0,x2paddle__model_24_Split_2_output_0_p1,x2paddle__model_24_Split_2_output_0_p2 = paddle.split(x=x2paddle__model_24_Sigmoid_2_output_0, num_or_sections=[2, 2, 5], axis=4)
        x2paddle__model_24_Mul_8_output_0 = paddle.multiply(x=x2paddle__model_24_Split_2_output_0_p0, y=x2paddle__model_24_Constant_17_output_0)
        x2paddle__model_24_Mul_10_output_0 = paddle.multiply(x=x2paddle__model_24_Split_2_output_0_p1, y=x2paddle__model_24_Constant_20_output_0)
        x2paddle__model_24_Add_2_output_0 = paddle.add(x=x2paddle__model_24_Mul_8_output_0, y=x2paddle__model_24_Constant_18_output_0)
        x2paddle__model_24_Pow_2_output_0 = paddle.pow(x=x2paddle__model_24_Mul_10_output_0, y=x2paddle__model_24_Constant_21_output_0)
        x2paddle__model_24_Mul_9_output_0 = paddle.multiply(x=x2paddle__model_24_Add_2_output_0, y=x2paddle__model_24_Constant_19_output_0)
        x2paddle__model_24_Mul_11_output_0 = paddle.multiply(x=x2paddle__model_24_Pow_2_output_0, y=x2paddle__model_24_Constant_22_output_0)
        x2paddle__model_24_Concat_2_output_0 = paddle.concat(x=[x2paddle__model_24_Mul_9_output_0, x2paddle__model_24_Mul_11_output_0, x2paddle__model_24_Split_2_output_0_p2], axis=4)
        x2paddle__model_24_Reshape_5_output_0 = paddle.reshape(x=x2paddle__model_24_Concat_2_output_0, shape=[1, 1200, 9])
        x2paddle_output0 = paddle.concat(x=[x2paddle__model_24_Reshape_1_output_0, x2paddle__model_24_Reshape_3_output_0, x2paddle__model_24_Reshape_5_output_0], axis=1)
        return x2paddle_output0

def main(x2paddle_images):
    # There are 1 inputs.
    # x2paddle_images: shape-[1, 3, 640, 640], type-float32.
    paddle.disable_static()
    params = paddle.load(r'/home/miiku/桌面/yolov5/runs/train/exp12/weights/pd_model/model.pdparams')
    model = ONNXModel()
    model.set_dict(params, use_structured_name=True)
    model.eval()
    out = model(x2paddle_images)
    return out
